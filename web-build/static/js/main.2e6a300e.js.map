{"version":3,"file":"static/js/main.2e6a300e.js","mappings":"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","sources":["components/Slider.js","components/PromptInput.js","components/Breathing.js","components/DropDown.js","components/ImagePicker.js","components/Buttons.js","components/Expand.js","components/Prompt.js","components/Inference.js","MainApp.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nexport default function SliderComponent({ setSteps, setGuidance }) {\r\n  const [samplingValue, setSamplingValue] = React.useState(30);\r\n  const [guidanceValue, setGuidanceValue] = React.useState(7);\r\n\r\n  // Handle sampling steps change\r\n  const handleStepChange = (x) => {\r\n    setSamplingValue(x);\r\n    setSteps(x);\r\n  };\r\n\r\n  // Handle guidance change\r\n  const handleGuidanceChange = (x) => {\r\n    setGuidanceValue(parseFloat(x.toFixed(2)));\r\n    setGuidance(parseFloat(x.toFixed(2)));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.captionText}>Sampling Steps</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={3}\r\n        maximumValue={50}\r\n        step={1}\r\n        value={samplingValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleStepChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{samplingValue}</Text>\r\n      <Text style={styles.captionText}>Guidance</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={0}\r\n        maximumValue={10}\r\n        step={0.1}\r\n        value={guidanceValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleGuidanceChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{guidanceValue}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#FFFFFF\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    paddingTop: 50,\r\n  },\r\n  slider: {\r\n    width: 350,\r\n    height: 40,\r\n  },\r\n  captionText: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  sliderValue: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n    paddingBottom: 30,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Pressable,\r\n  StyleSheet,\r\n  TextInput,\r\n  useWindowDimensions,\r\n  Image,\r\n  View,\r\n} from \"react-native\";\r\n\r\nexport default function PromptInputComponent({ setPrompt, inferredPrompt }) {\r\n  const [text, setText] = React.useState(\"\");\r\n  const { width } = useWindowDimensions();\r\n\r\n  const textInputStyle = {\r\n    ...styles.input,\r\n    width: width > 500 ? 500 : width - 80,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inferredPrompt) {\r\n      setText(inferredPrompt);\r\n      setPrompt(inferredPrompt);\r\n    }\r\n  }, [inferredPrompt]);\r\n\r\n  const handleTextChange = (x) => {\r\n    setText(x);\r\n    setPrompt(x);\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"flex-end\" }}>\r\n      <TextInput\r\n        style={textInputStyle}\r\n        placeholder=\"\"\r\n        multiline\r\n        textAlign=\"center\"\r\n        onChangeText={handleTextChange}\r\n        value={text}\r\n        maxLength={20000}\r\n      />\r\n      <Pressable\r\n        style={({ pressed }) => [\r\n          {\r\n            height: pressed ? 25 : 30,\r\n            width: pressed ? 25 : 30,\r\n            backgroundColor: pressed ? \"#B58392\" : \"#3a3c3f\",\r\n            borderRadius: 6,\r\n            padding: 10,\r\n            marginTop: 10,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          },\r\n        ]}\r\n        onPress={() => {\r\n          setText(\"\");\r\n          setPrompt(\"\");\r\n        }}\r\n      >\r\n        <Image\r\n          source={require(\"../assets/close.png\")}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            resizeMode: \"contain\",\r\n          }}\r\n        />\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  borderColor: \"#B58392\",\r\n  color: \"#000000\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    backgroundColor: colors.backgroundColor,\r\n    borderColor: colors.borderColor,\r\n    borderBottomLeftRadius: 4,\r\n    borderWidth: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderStartWidth: 10,\r\n    borderEndWidth: 10,\r\n    borderRadius: 6,\r\n    height: 200,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    fontSize: 20,\r\n    color: colors.color,\r\n    fontFamily: \"Sigmar\",\r\n    marginRight: 10,\r\n  },\r\n});\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nexport default function Breathing() {\r\n  // Create an array of Animated values using useRef\r\n  const animatedValues = useRef(\r\n    [...Array(12)].map(() => new Animated.Value(0))\r\n  ).current;\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    // Define animations for each value in animatedValues\r\n    const animations = animatedValues.map((animatedValue, index) => {\r\n      // Animation for increasing value\r\n      const animation1 = Animated.timing(animatedValue, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      // Animation for decreasing value\r\n      const animation2 = Animated.timing(animatedValue, {\r\n        toValue: 0,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      const fast = 300;\r\n      const medium = 450;\r\n      const slow = 600;\r\n      // Define delays for each animation\r\n      const delays = [\r\n        index * fast,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        index * slow,\r\n        (11 - index) * medium,\r\n        index * fast,\r\n        (11 - index) * slow,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        (11 - index) * medium,\r\n        index * slow,\r\n        (11 - index) * slow,\r\n      ];\r\n\r\n      // Create a sequence of animations with delays\r\n      const animationSequence = delays.map((delay, index) => {\r\n        return Animated.sequence([\r\n          Animated.delay(delay),\r\n          animation1,\r\n          animation2,\r\n        ]);\r\n      });\r\n\r\n      // Create a sequence of all animation sequences\r\n      const animationSequences = Animated.sequence(animationSequence);\r\n\r\n      // Create a loop for the animation sequence\r\n      return Animated.loop(animationSequences);\r\n    });\r\n\r\n    // Start all animations\r\n    animations.forEach((animation) => {\r\n      animation.start();\r\n    });\r\n  }, [animatedValues]);\r\n\r\n  // Interpolate animations to map values to desired output range\r\n  const interpolateAnimations = animatedValues.map((animatedValue) =>\r\n    animatedValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: width > 1000 ? [60, 90] : [20, 30],\r\n      extrapolate: \"clamp\",\r\n    })\r\n  );\r\n\r\n  // Create animated styles based on interpolated values\r\n  const animatedStyles = interpolateAnimations.map((interpolateAnimation) => ({\r\n    fontSize: interpolateAnimation,\r\n  }));\r\n\r\n  return (\r\n    <View style={styles.containerbreathing}>\r\n      <Text style={styles.heading}>\r\n        <Animated.Text style={[styles.char, animatedStyles[0]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[1]]}>\r\n          I\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[2]]}>\r\n          X\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[3]]}>\r\n          E\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[4]]}>\r\n          L\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[5]]}>\r\n          {\" \"}\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[6]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[7]]}>\r\n          R\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[8]]}>\r\n          O\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[9]]}>\r\n          M\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[10]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[11]]}>\r\n          T\r\n        </Animated.Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#6750A4\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerbreathing: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  char: {\r\n    marginHorizontal: 15,\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Sigmar\",\r\n    color: colors.color,\r\n    paddingTop: 25,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Dropdown } from \"react-native-element-dropdown\";\r\n\r\nexport default function DropDownComponent({\r\n  passModelID,\r\n  isImagePickerVisible,\r\n  parameters,\r\n}) {\r\n  const [dropDownData, setDropDownData] = useState([\r\n    { label: \"pix2pix\", value: \"timbrooks/instruct-pix2pix\" },\r\n    {\r\n      label: \"Stable Diffusion Refiner\",\r\n      value: \"stabilityai/stable-diffusion-xl-refiner-1.0\",\r\n    },\r\n  ]);\r\n  const [placeholderModelID, setPlaceholderModelID] = useState(\"Model ID\");\r\n\r\n  useEffect(() => {\r\n    let data = [];\r\n    if (isImagePickerVisible) {\r\n      data = [\r\n        { label: \"pix2pix\", value: \"timbrooks/instruct-pix2pix\" },\r\n        {\r\n          label: \"Stable Diffusion\",\r\n          value: \"stabilityai/stable-diffusion-xl-refiner-1.0\",\r\n        },\r\n      ];\r\n      if (parameters) {\r\n        setPlaceholderModelID(\"pix2pix\");\r\n        passModelID(\"timbrooks/instruct-pix2pix\");\r\n      }\r\n    } else {\r\n      data = [\r\n        {\r\n          label: \"Step Aware\",\r\n          value: \"SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep\",\r\n        },\r\n        {\r\n          label: \"Stable Diffusion\",\r\n          value: \"stabilityai/stable-diffusion-xl-base-1.0\",\r\n        },\r\n        { label: \"Voxel\", value: \"Fictiverse/Stable_Diffusion_VoxelArt_Model\" },\r\n        {\r\n          label: \"Paper Cut Out\",\r\n          value: \"Fictiverse/Stable_Diffusion_PaperCut_Model\",\r\n        },\r\n        { label: \"Van-Gogh\", value: \"dallinmackay/Van-Gogh-diffusion\" },\r\n        { label: \"Robots\", value: \"nousr/robo-diffusion\" },\r\n        { label: \"Anime\", value: \"Eugeoter/artiwaifu-diffusion-1.0\" },\r\n        { label: \"Arcane\", value: \"nitrosocke/Arcane-Diffusion\" },\r\n        {\r\n          label: \"Balloon Art\",\r\n          value: \"Fictiverse/Stable_Diffusion_BalloonArt_Model\",\r\n        },\r\n        { label: \"Open Journey\", value: \"prompthero/openjourney\" },\r\n        {\r\n          label: \"Flintstones\",\r\n          value: \"juliajoanna/sdxl-flintstones_finetuning_1\",\r\n        },\r\n        { label: \"SegMind\", value: \"segmind/Segmind-Vega\" },\r\n        { label: \"Absolute Reality\", value: \"digiplay/AbsoluteReality_v1.8.1\" },\r\n        { label: \"Photo\", value: \"dreamlike-art/dreamlike-photoreal-2.0\" },\r\n        { label: \"Acorn\", value: \"digiplay/Acorn_Photo_v1\" },\r\n      ];\r\n      if (parameters) {\r\n        setPlaceholderModelID(\"Step Aware\");\r\n        passModelID(\"SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep\");\r\n      }\r\n    }\r\n    setDropDownData(data);\r\n  }, [isImagePickerVisible]);\r\n\r\n  return (\r\n    <Dropdown\r\n      style={styles.dropdown}\r\n      selectedTextStyle={styles.selectedTextStyle}\r\n      placeholderStyle={styles.placeholderStyle}\r\n      data={dropDownData}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      placeholder={placeholderModelID}\r\n      onChange={(item) => {\r\n        passModelID(item.value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  borderBottomColor: \"#9DA58D\",\r\n  color: \"#FFFFFF\",\r\n};\r\nconst styles = StyleSheet.create({\r\n  dropdown: {\r\n    margin: 16,\r\n    height: 50,\r\n    width: 300,\r\n    borderBottomColor: colors.borderBottomColor,\r\n    borderBottomWidth: 3,\r\n  },\r\n  placeholderStyle: {\r\n    color: colors.color,\r\n    fontSize: 25,\r\n    fontFamily: \"Sigmar\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n  },\r\n  selectedTextStyle: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    fontFamily: \"Sigmar\",\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\nimport { Pressable, Image, View, StyleSheet, Text, Switch } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst MyImagePicker = ({\n  imageSource,\n  setImageSource,\n  styleSwitch,\n  setStyleSwitch,\n  settingSwitch,\n  setSettingSwitch,\n}) => {\n  const selectImage = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      alert(\"Sorry, we need media library permissions to select an image.\");\n      return;\n    }\n    console.log(\"Selecting image\");\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImageSource(result.assets[0].uri);\n    }\n  };\n\n  const styleSwitchFunction = () => {\n    setStyleSwitch(!styleSwitch);\n  };\n\n  const settingSwitchFunction = () => {\n    setSettingSwitch(!settingSwitch);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.rowContainer}>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: styleSwitch ? \"#9DA58D\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Style\n          </Text>\n          <Switch\n            trackColor={{ false: \"#9DA58D\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={styleSwitchFunction}\n            value={styleSwitch}\n          />\n        </View>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: settingSwitch ? \"#9FA8DA\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Layout\n          </Text>\n          <Switch\n            trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={settingSwitchFunction}\n            value={settingSwitch}\n          />\n        </View>\n      </View>\n\n      {imageSource && (\n        <Image\n          source={\n            typeof imageSource === \"number\" ? imageSource : { uri: imageSource }\n          }\n          style={styles.image}\n        />\n      )}\n      <Pressable style={styles.selectButton} onPress={selectImage}>\n        <Text style={styles.promptText}>Select</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  selectButtonBackground: \"#3a3c3f\",\n  white: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: 20,\n  },\n  rowContainer: {\n    backgroundColor: colors.backgroundColor,\n    alignItems: \"center\",\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"row\",\n    overflow: \"auto\",\n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  selectButton: {\n    margin: 20,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n    backgroundColor: colors.selectButtonBackground,\n  },\n  promptText: {\n    color: colors.white,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n});\n\nexport default MyImagePicker;\n","// Buttons.js\nimport React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Pressable,\n  ActivityIndicator,\n  Switch,\n  Image,\n} from \"react-native\";\n\nconst Buttons = ({\n  comboButtonPressed,\n  setComboButtonPressed,\n  switchToFlan,\n  setInferrenceButton,\n  activity,\n  longPrompt,\n  setTextInference,\n  switchPromptFunction,\n  promptLengthValue,\n  setParametersWrapper,\n}) => {\n  \n  return (\n    <>\n      {activity ? (\n        <ActivityIndicator\n          size=\"large\"\n          color=\"#B58392\"\n          style={{ margin: 25 }}\n        />\n      ) : (\n        <>\n          {longPrompt ? (\n            <>\n              <View style={[styles.rowContainer]}>\n                <Pressable\n                  onPress={() => {\n                    setTextInference(true);\n                  }}\n                  style={({ pressed }) => [\n                    {\n                      backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\",\n                      width: 40,\n                      height: 40,\n                      borderRadius: 20,\n                      margin: 10,\n                    },\n                  ]}\n                ></Pressable>\n                <View style={styles.columnContainer}>\n                  <View style={[styles.rowContainer]}>\n                    <Text\n                      style={[\n                        {\n                          color: comboButtonPressed ? '#FFFFFF' : promptLengthValue ? \"#FFFFFF\" : \"#9FA8DA\",\n                          marginRight: 15,\n                        },\n                        styles.sliderText,\n                      ]}\n                    >\n                      Short\n                    </Text>\n                    <Text\n                      style={[\n                        {\n                          color: comboButtonPressed ? '#FFFFFF' : promptLengthValue ? \"#9FA8DA\" : \"#FFFFFF\",\n                          marginRight: 15,\n                        },\n                        styles.sliderText,\n                      ]}\n                    >\n                      Long\n                    </Text>\n                  </View>\n                  <View style={[styles.rowContainer, { paddingBottom: 10, justifyContent: \"space-between\" }]}>\n                  <Switch\n                    style={{ marginRight: 40 }} \n                    trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n                    thumbColor=\"#B58392\"\n                    activeThumbColor=\"#6750A4\"\n                    ios_backgroundColor=\"#3e3e3e\"\n                    onValueChange={switchPromptFunction}\n                    value={promptLengthValue}\n                  />\n                  <Pressable\n                    onPress={() => {\n                      switchToFlan();\n                      setComboButtonPressed(true);\n                    }}\n                  >\n                    <Image\n                    source={comboButtonPressed ? require(\"../assets/join_colored.png\") : require(\"../assets/join.png\")}\n                    style={[{marginRight: 30}, styles.changeButton]}\n                  />\n                    </Pressable>\n                  </View>\n                </View>\n              </View>\n            </>\n          ) : (\n            <Pressable\n              onPress={() => {\n                setTextInference(true);\n              }}\n              style={({ pressed }) => [\n                { backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\" },\n                styles.button,\n              ]}\n            >\n              {({ pressed }) => (\n                <Text style={styles.promptText}>\n                  {pressed ? \"PROMPTED!\" : \"Prompt\"}\n                </Text>\n              )}\n            </Pressable>\n          )}\n          <Pressable\n            onPress={() => {\n              setInferrenceButton(true);\n              setParametersWrapper();\n            }}\n            style={({ pressed }) => [\n              {\n                backgroundColor: pressed ? \"#9DA58D\" : \"#958DA5\",\n                marginBottom: 20,\n              },\n              styles.button,\n            ]}\n          >\n            {({ pressed }) => (\n              <Text style={styles.promptText}>\n                {pressed ? \"INFERRED!\" : \"Inference\"}\n              </Text>\n            )}\n          </Pressable>\n        </>\n      )}\n    </>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  color: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  rowContainer: {\n    backgroundColor: colors.backgroundColor,\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 10,\n    overflow: \"visible\",\n    \n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  button: {\n    margin: 10,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n  },\n  activityIndicator: {\n    marginLeft: 50,\n  },\n  promptText: {\n    color: colors.color,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  changeButton: {\n    width: 20,\n    height: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\", // change as needed\n    elevation: 3, // for Android shadow\n    shadowColor: \"#000\", // for iOS shadow\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n    shadowOpacity: 0.25, // for iOS shadow\n    shadowRadius: 3.84, // for iOS shadow\n  },\n});\n\nexport default Buttons;\n","import React from \"react\";\nimport { StyleSheet, Pressable, Image } from \"react-native\";\nimport { Dimensions } from \"react-native\";\n\nconst Expand = ({ isImagePickerVisible, setImagePickerVisible, window }) => {\n  return (\n    <Pressable\n      style={[\n        styles.expandButton,\n        {\n          alignSelf: \"flex-start\",\n          marginLeft: window.width < 1000 ? \"20%\" : \"0\",\n          marginBottom: 0,\n        },\n      ]}\n      onPress={() => setImagePickerVisible(!isImagePickerVisible)}\n    >\n      {isImagePickerVisible ? (\n        <Image\n          source={require(\"../assets/right.png\")}\n          style={styles.expandImage}\n        />\n      ) : (\n        <Image\n          source={require(\"../assets/down.png\")}\n          style={styles.expandImage}\n        />\n      )}\n    </Pressable>\n  );\n};\n\nconst colors = {\n  buttonBackground: \"#3a3c3f\",\n};\n\nconst styles = StyleSheet.create({\n  expandButton: {\n    width: 30, // adjust size as needed\n    height: 30, // adjust size as needed\n    borderRadius: 15, // half of size to make it circular\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: colors.buttonBackground, // change as needed\n    elevation: 3, // for Android shadow\n    shadowColor: \"#000\", // for iOS shadow\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n    shadowOpacity: 0.25, // for iOS shadow\n    shadowRadius: 3.84, // for iOS shadow\n  },\n  expandImage: {\n    width: 20,\n    height: 20,\n  },\n});\n\nexport default Expand;\n","import { useEffect } from \"react\";\nimport seeds from \"../assets/seeds.json\";\n\nconst PromptInference = ({\n  setFlanPrompt,\n  prompt,\n  textInference,\n  setTextInference,\n  setLongPrompt,\n  setShortPrompt,\n  setInferredPrompt,\n  promptLengthValue,\n  setActivity,\n  setModelError,\n}) => {\n  useEffect(() => {\n    if (textInference) {\n      setActivity(true);\n      setModelError(false);\n      let alteredPrompt = \"\";\n      if (prompt === \"Avocado Armchair\" || prompt === \"\") {\n        const randomIndex = Math.floor(Math.random() * seeds.seeds.length);\n        if (randomIndex > seeds.seeds.length - 13) {\n          setLongPrompt(seeds.seeds[randomIndex]);\n          setShortPrompt(seeds.seeds[randomIndex]);\n          setInferredPrompt(seeds.seeds[randomIndex]);\n          setActivity(false);\n          return;\n        }\n        alteredPrompt = seeds.seeds[randomIndex];\n      } else {\n        alteredPrompt = prompt;\n      }\n      alteredPrompt = `I'm giving you a seed string for a stable diffusion model. Return two versions \\\n        A long version and a shortened version.  The long version should be a minimum of 400 tokens and the \\\n        shortened version should be no more than 40 tokens.  Make both descriptive and creative. \\\n        Here is the seed string. : ${alteredPrompt}`;\n      fetch(\"/inferencePrompt \", {                        // Change this to your API endpoint and use a library\n        method: \"POST\",                                   // Axios if not running in the same container\n        headers: {                                        // http://localhost:8085/api if running locally or w/e port your server is using or                                                        \n          \"Content-Type\": \"application/json\",             // inferencePrompt if running in a container\n        },\n        body: JSON.stringify({\n          prompt: alteredPrompt,\n          modelID: \"mistralai/Mistral-7B-Instruct-v0.3\",\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          const generatedText = responseData[0][\"generated_text\"];\n          const splitPrompt = generatedText.split(\n            /Short(?:ened)? (?:Version:)?/i\n          );\n          const longPromptHolder = splitPrompt[0]\n            .substring(0, 150)\n            .split(/\\n\\n/)\n            .slice(-1)[0]\n            .replace(\"Long Version:\", \"\")\n            .replace(\"\\n\", \"\");\n          const lPrompt = longPromptHolder + splitPrompt[0].substring(150);\n          const holderShortPrompt = splitPrompt[1]\n            .substring(0, 150)\n            .split(/\\n\\n/)\n            .slice(-1)[0]\n            .replace(\"\\n\", \"\");\n          const sPrompt =\n            holderShortPrompt + splitPrompt[1].substring(150).split(/\\n\\n/)[0];\n          setFlanPrompt(responseData[0][\"flan\"]);\n          setLongPrompt(lPrompt);\n          setShortPrompt(sPrompt);\n          if (!promptLengthValue) {\n            setInferredPrompt(sPrompt);\n          } else {\n            setInferredPrompt(lPrompt);\n          }\n          setActivity(false);\n        })\n        .catch((error) => console.error(\"Error:\", error));\n    }\n    setTextInference(false);\n  }, [textInference]);\n};\n\nexport default PromptInference;\n","import { useEffect, useState } from \"react\";\n\nconst Inference = ({\n  setInferrenceButton,\n  inferrenceButton,\n  setModelMessage,\n  imageSource,\n  parameters,\n  modelID,\n  prompt,\n  isImagePickerVisible,\n  styleSwitch,\n  settingSwitch,\n  guidance,\n  steps,\n  setActivity,\n  setModelError,\n  setReturnedPrompt,\n  setInferredImage,\n}) => {\n  const [encodedImage, setEncodedImage] = useState(\"\");\n\n  const getBase64Image = () => {\n    console.log(imageSource);\n    fetch(imageSource)\n      .then((response) => response.blob())\n      .then((blob) => {\n        console.log(blob.type);\n        const reader = new FileReader();\n        reader.readAsDataURL(blob); \n        reader.onloadend = function () {\n          let base64data = reader.result;\n          setEncodedImage(base64data);\n        };\n      })\n      .catch((error) => console.error(error));\n  };\n\n  /** useEffect hook for img2img */\n\n  useEffect(() => {\n    if (encodedImage) {\n      let scaledIP = { none: { key2: [0.0, 0.0] } };\n      if (styleSwitch) {\n        scaledIP = {\n          up: { block_0: [0.0, 1.0, 0.0] },\n        };\n      }\n      if (settingSwitch) {\n        scaledIP = {\n          down: { block_2: [0.0, 1.0] },\n        };\n      }\n      if (styleSwitch && settingSwitch) {\n        scaledIP = {\n          down: { block_2: [0.0, 1.0] },\n          up: { block_0: [0.0, 1.0, 0.0] },\n        };\n      }\n      console.log(scaledIP);\n      fetch(\"/img2img\", {                 // Change this to your API endpoint and use a library                 \n        method: \"POST\",                   // Axios if not running in the same container\n        headers: {                        // http://localhost:8085/api if running locally or w/e port your server is using or\n          \"Content-Type\": \"application/json\", // /api if running in a container\n        },\n        body: JSON.stringify({\n          prompt: prompt,\n          steps: steps,\n          guidance: guidance,\n          modelID: modelID,\n          image: encodedImage,              // Holders Until File Upload Optional with FastAPI is fixed\n          scale: scaledIP,                  // Holders Until File Upload Optional with FastAPI is fixed\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          setActivity(false);\n          setInferrenceButton(false);\n          setReturnedPrompt(prompt);\n          setEncodedImage(null);\n          setInferredImage(\"data:image/png;base64,\" + responseData.output);\n        })\n        .catch(function (error) {\n          setModelMessage(\"Model Error!\");\n          setActivity(false);\n          setModelError(true);\n          setInferrenceButton(false);\n          console.log(error);\n        });\n    }\n  }, [encodedImage]);\n\n  /**  useEffect hook for txt2img  */\n\n  useEffect(() => {\n    if (inferrenceButton) {\n      console.log(parameters);\n      setActivity(true);\n      if (isImagePickerVisible) {  //  Check for timeline on IP Adapater inference API\n        setModelMessage(\"Inference API img2img NotAvailable\");\n        setActivity(false);\n        setModelError(true);\n        setInferrenceButton(false);\n        // getBase64Image();\n      } else {\n        const ipScaleHolder = { key1: { key2: [0.0, 0.0] } };\n        fetch(\"/api\", {                          // Change this to your API endpoint and use a library                                         \n          method: \"POST\",                       // Axios if not running in the same container\n          headers: {                            // http://localhost:8085/api if running locally or w/e port your server is using or\n             \"Content-Type\": \"application/json\", // /api if running in a container\n          },\n          body: JSON.stringify({\n            prompt: prompt,\n            steps: steps,\n            guidance: guidance,\n            modelID: modelID,\n            image: \"test\",                  // Holders Until File Upload Optional with FastAPI is fixed\n            scale: ipScaleHolder,           // Holders Until File Upload Optional with FastAPI is fixed\n          }),\n        })\n          .then((response) => response.json())\n          .then((responseData) => {\n            if (responseData.output == \"Model Waking\") {\n              setModelMessage(\"Model Waking\");\n              setActivity(false);\n              setModelError(true);\n              setInferrenceButton(false);\n            }\n            setInferrenceButton(false);\n            setActivity(false);\n            setReturnedPrompt(prompt);\n            setInferredImage(\"data:image/png;base64,\" + responseData.output);\n          })\n          .catch(function (error) {\n            setModelMessage(\"Model Error!\");\n            setActivity(false);\n            setModelError(true);\n            setInferrenceButton(false);\n\n            console.log(error);\n          });\n      }\n    }\n  }, [inferrenceButton]);\n};\n\nexport default Inference;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Image,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\nimport SliderComponent from \"./components/Slider\";\r\nimport PromptInputComponent from \"./components/PromptInput\";\r\nimport BreathingComponent from \"./components/Breathing\";\r\nimport DropDownComponent from \"./components/DropDown\";\r\nimport MyImagePicker from \"./components/ImagePicker\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport Expand from \"./components/Expand\";\r\nimport PromptInference from \"./components/Prompt\";\r\nimport Inference from \"./components/Inference\";\r\n\r\nconst assetImage = require(\"./assets/avocado.jpg\");\r\n\r\nexport default function App() {\r\n  useFonts({ Sigmar: require(\"./assets/Sigmar/Sigmar-Regular.ttf\") });\r\n  const [inferredImage, setInferredImage] = useState(assetImage);\r\n  const [steps, setSteps] = useState(30);\r\n  const [guidance, setGuidance] = useState(7);\r\n  const [modelID, setModelID] = useState(\r\n    \"SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep\"\r\n  );\r\n  const [prompt, setPrompt] = useState(\"Avocado Armchair\");\r\n  const [inferredPrompt, setInferredPrompt] = useState(null);\r\n  const [parameters, setParameters] = useState(null);\r\n  const [activity, setActivity] = useState(false);\r\n  const [modelError, setModelError] = useState(false);\r\n  const [returnedPrompt, setReturnedPrompt] = useState(\"Avocado Armchair\");\r\n  const [textInference, setTextInference] = useState(false);\r\n  const [shortPrompt, setShortPrompt] = useState(\"\");\r\n  const [longPrompt, setLongPrompt] = useState(null);\r\n  const [promptLengthValue, setPromptLengthValue] = useState(false);\r\n  const [modelMessage, setModelMessage] = useState(\"\");\r\n  const [inferrenceButton, setInferrenceButton] = useState(null);\r\n  const [flanPrompt, setFlanPrompt] = useState(null);\r\n  const [comboButtonPressed, setComboButtonPressed] = useState(false);\r\n  const window = useWindowDimensions();\r\n\r\n  const [isImagePickerVisible, setImagePickerVisible] = useState(false);\r\n  const [imageSource, setImageSource] = useState(assetImage);\r\n  const [settingSwitch, setSettingSwitch] = useState(false);\r\n  const [styleSwitch, setStyleSwitch] = useState(false);\r\n\r\n  const passModelIDWrapper = (x) => {\r\n    setModelError(false);\r\n    setModelID(x);\r\n  };\r\n\r\n  const swapImage = () => {\r\n    setInferredImage(imageSource);\r\n    setImageSource(inferredImage);\r\n  };\r\n\r\n  const switchPromptFunction = () => {\r\n    setPromptLengthValue(!promptLengthValue);\r\n    if (promptLengthValue) {\r\n      setInferredPrompt(shortPrompt);\r\n    } else {\r\n      setInferredPrompt(longPrompt);\r\n    }\r\n    setComboButtonPressed(false);\r\n  };\r\n\r\n  const switchToFlan = () => {\r\n    setInferredPrompt(flanPrompt);\r\n  };\r\n\r\n  const setParametersWrapper = () => {\r\n    setParameters(`${prompt}-${steps}-${guidance}-${modelID}`);\r\n  };\r\n\r\n  return (\r\n    // Main container\r\n    <View style={styles.titlecontainer}>\r\n      <PromptInference\r\n        setFlanPrompt={setFlanPrompt}\r\n        prompt={prompt}\r\n        textInference={textInference}\r\n        setTextInference={setTextInference}\r\n        setLongPrompt={setLongPrompt}\r\n        setShortPrompt={setShortPrompt}\r\n        setInferredPrompt={setInferredPrompt}\r\n        promptLengthValue={promptLengthValue}\r\n        setActivity={setActivity}\r\n        setModelError={setModelError}\r\n      />\r\n      <Inference\r\n        setInferrenceButton={setInferrenceButton}\r\n        inferrenceButton={inferrenceButton}\r\n        setModelMessage={setModelMessage}\r\n        imageSource={imageSource}\r\n        parameters={parameters}\r\n        modelID={modelID}\r\n        prompt={prompt}\r\n        isImagePickerVisible={isImagePickerVisible}\r\n        styleSwitch={styleSwitch}\r\n        settingSwitch={settingSwitch}\r\n        guidance={guidance}\r\n        steps={steps}\r\n        setActivity={setActivity}\r\n        setModelError={setModelError}\r\n        setReturnedPrompt={setReturnedPrompt}\r\n        setInferredImage={setInferredImage}\r\n      />\r\n      <BreathingComponent />\r\n      <ScrollView\r\n        scrollY={true}\r\n        style={styles.ScrollView}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        {window.width > 1000 ? (\r\n          <View style={styles.rowContainer}>\r\n            {/* Left column */}\r\n            {isImagePickerVisible && (\r\n              <Pressable\r\n                onPress={() => {\r\n                  swapImage();\r\n                }}\r\n                style={[\r\n                  styles.swapButton,\r\n                  {\r\n                    top: window.height / 2 - 15,\r\n                    left: window.width / 2 - 15,\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  source={require(\"./assets/circle.png\")}\r\n                  style={styles.changeButton}\r\n                />\r\n              </Pressable>\r\n            )}\r\n\r\n            <View style={styles.leftColumnContainer}>\r\n              <View>\r\n                <PromptInputComponent\r\n                  setPrompt={setPrompt}\r\n                  inferredPrompt={inferredPrompt}\r\n                />\r\n              </View>\r\n              <View style={[styles.rowContainer, { padding: 0 }]}>\r\n                <DropDownComponent\r\n                  passModelID={passModelIDWrapper}\r\n                  isImagePickerVisible={isImagePickerVisible}\r\n                  parameters={parameters}\r\n                />\r\n                <View style={styles.columnContainer}>\r\n                  <Buttons\r\n                    comboButtonPressed={comboButtonPressed}\r\n                    setComboButtonPressed={setComboButtonPressed}\r\n                    switchToFlan={switchToFlan}\r\n                    setInferrenceButton={setInferrenceButton}\r\n                    activity={activity}\r\n                    longPrompt={longPrompt}\r\n                    setTextInference={setTextInference}\r\n                    switchPromptFunction={switchPromptFunction}\r\n                    promptLengthValue={promptLengthValue}\r\n                    setParametersWrapper={setParametersWrapper}\r\n                  />\r\n                  {modelError ? (\r\n                    <Text style={styles.promptText}>{modelMessage}</Text>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </View>\r\n              </View>\r\n\r\n              <View>\r\n                <Expand\r\n                  isImagePickerVisible={isImagePickerVisible}\r\n                  setImagePickerVisible={setImagePickerVisible}\r\n                  window={window}\r\n                />\r\n                {isImagePickerVisible && (\r\n                  <MyImagePicker\r\n                    imageSource={imageSource}\r\n                    setImageSource={setImageSource}\r\n                    styleSwitch={styleSwitch}\r\n                    setStyleSwitch={setStyleSwitch}\r\n                    settingSwitch={settingSwitch}\r\n                    setSettingSwitch={setSettingSwitch}\r\n                  />\r\n                )}\r\n                <SliderComponent\r\n                  setSteps={setSteps}\r\n                  setGuidance={setGuidance}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={styles.rightColumnContainer}>\r\n              {inferredImage && (\r\n                <Image\r\n                  source={\r\n                    typeof inferredImage === \"number\"\r\n                      ? inferredImage\r\n                      : { uri: inferredImage }\r\n                  }\r\n                  style={styles.imageStyle}\r\n                />\r\n              )}\r\n              <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={styles.columnContainer}>\r\n            <PromptInputComponent\r\n              setPrompt={setPrompt}\r\n              inferredPrompt={inferredPrompt}\r\n            />\r\n            <DropDownComponent\r\n              passModelID={passModelIDWrapper}\r\n              isImagePickerVisible={isImagePickerVisible}\r\n              parameters={parameters}\r\n            />\r\n            <Buttons\r\n              comboButtonPressed={comboButtonPressed}\r\n              setComboButtonPressed={setComboButtonPressed}\r\n              switchToFlan={switchToFlan}\r\n              setInferrenceButton={setInferrenceButton}\r\n              activity={activity}\r\n              longPrompt={longPrompt}\r\n              setTextInference={setTextInference}\r\n              switchPromptFunction={switchPromptFunction}\r\n              promptLengthValue={promptLengthValue}\r\n              setParametersWrapper={setParametersWrapper}\r\n            />\r\n            {modelError ? (\r\n              <Text style={styles.promptText}>{modelMessage}</Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Expand\r\n              isImagePickerVisible={isImagePickerVisible}\r\n              setImagePickerVisible={setImagePickerVisible}\r\n              window={window}\r\n            />\r\n            {isImagePickerVisible && (\r\n              <>\r\n                <MyImagePicker\r\n                  imageSource={imageSource}\r\n                  setImageSource={setImageSource}\r\n                  styleSwitch={styleSwitch}\r\n                  setStyleSwitch={setStyleSwitch}\r\n                  settingSwitch={settingSwitch}\r\n                  setSettingSwitch={setSettingSwitch}\r\n                />\r\n                <Pressable\r\n                  onPress={() => {\r\n                    swapImage();\r\n                  }}\r\n                  style={styles.swapButtonColumn}\r\n                >\r\n                  <Image\r\n                    source={require(\"./assets/circle.png\")}\r\n                    style={styles.changeButton}\r\n                  />\r\n                </Pressable>\r\n              </>\r\n            )}\r\n            <SliderComponent setSteps={setSteps} setGuidance={setGuidance} />\r\n            {inferredImage && (\r\n              <Image\r\n                source={\r\n                  typeof inferredImage === \"number\"\r\n                    ? inferredImage\r\n                    : { uri: inferredImage }\r\n                }\r\n                style={styles.imageStyle}\r\n              />\r\n            )}\r\n            <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#25292e\",\r\n  buttonBackground: \"#3a3c3f\",\r\n  color: \"#FFFFFF\",\r\n  button: \"#958DA5\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titlecontainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    padding: 20,\r\n  },\r\n  rowContainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    overflow: \"visible\",\r\n    padding: 20,\r\n  },\r\n  leftColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\", // Center items horizontally\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    marginRight: 10,\r\n  },\r\n  rightColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 10,\r\n  },\r\n  columnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  button: {\r\n    margin: 10,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 32,\r\n    elevation: 3,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  swapButton: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    position: \"absolute\",\r\n    left: window.width / 2 - 15,\r\n    top: window.height / 2 - 15,\r\n    zIndex: 1,\r\n    elevation: 3,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  changeButton: {\r\n    width: 60,\r\n    height: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\", // change as needed\r\n    elevation: 3, // for Android shadow\r\n    shadowColor: \"#000\", // for iOS shadow\r\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\r\n    shadowOpacity: 0.25, // for iOS shadow\r\n    shadowRadius: 3.84, // for iOS shadow\r\n  },\r\n  swapButtonColumn: {\r\n    width: 60, // adjust size as needed\r\n    height: 60, // adjust size as needed\r\n    borderRadius: 30,\r\n    elevation: 3,\r\n    margin: 20,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  promptText: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 2,\r\n    lineHeight: 30,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  ScrollView: {\r\n    backgroundColor: colors.backgroundColor,\r\n    marginTop: 50,\r\n    padding: 5,\r\n  },\r\n  imageStyle: {\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import { createRoot } from 'react-dom/client';\nimport MainApp from './MainApp';\n\n// Assuming your root element is 'root'\nconst rootElement = document.getElementById('root');\n\n// Your App component\nconst App = () => (\n  <div>\n    <MainApp/>\n  </div>\n);\n\n// Create a root\nconst root = createRoot(rootElement);\n\n// Render your App\nroot.render(<App />);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [133], () => (__webpack_require__(470)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SliderComponent","setSteps","setGuidance","samplingValue","setSamplingValue","React","guidanceValue","setGuidanceValue","_jsxs","View","style","styles","container","children","_jsx","Text","captionText","Slider","slider","minimumValue","maximumValue","step","value","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","x","sliderValue","parseFloat","toFixed","colors","StyleSheet","create","alignItems","paddingTop","width","height","color","fontSize","textAlign","letterSpacing","fontFamily","paddingBottom","PromptInputComponent","setPrompt","inferredPrompt","text","setText","useWindowDimensions","textInputStyle","_objectSpread","input","useEffect","flexDirection","TextInput","placeholder","multiline","onChangeText","maxLength","Pressable","pressed","backgroundColor","borderRadius","padding","marginTop","justifyContent","onPress","Image","source","require","resizeMode","borderColor","borderBottomLeftRadius","borderWidth","borderBottomRightRadius","borderStartWidth","borderEndWidth","paddingLeft","paddingRight","marginRight","Breathing","animatedValues","useRef","Array","map","Animated","Value","current","animatedValue","index","animation1","timing","toValue","duration","useNativeDriver","animation2","fast","medium","slow","animationSequence","delay","sequence","animationSequences","loop","forEach","animation","start","animatedStyles","interpolate","inputRange","outputRange","extrapolate","interpolateAnimation","containerbreathing","heading","char","flex","marginHorizontal","fontWeight","position","DropDownComponent","passModelID","isImagePickerVisible","parameters","dropDownData","setDropDownData","useState","label","placeholderModelID","setPlaceholderModelID","data","Dropdown","dropdown","selectedTextStyle","placeholderStyle","labelField","valueField","onChange","item","margin","borderBottomColor","borderBottomWidth","image","rowContainer","overflow","columnContainer","selectButton","paddingHorizontal","elevation","promptText","lineHeight","sliderText","MyImagePicker","imageSource","setImageSource","styleSwitch","setStyleSwitch","settingSwitch","setSettingSwitch","Switch","trackColor","false","true","thumbColor","activeThumbColor","ios_backgroundColor","styleSwitchFunction","settingSwitchFunction","uri","async","status","ImagePicker","requestMediaLibraryPermissionsAsync","alert","console","log","result","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","assets","display","button","activityIndicator","marginLeft","changeButton","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Buttons","comboButtonPressed","setComboButtonPressed","switchToFlan","setInferrenceButton","activity","longPrompt","setTextInference","switchPromptFunction","promptLengthValue","setParametersWrapper","_Fragment","ActivityIndicator","size","marginBottom","expandButton","expandImage","Expand","setImagePickerVisible","window","alignSelf","PromptInference","setFlanPrompt","prompt","textInference","setLongPrompt","setShortPrompt","setInferredPrompt","setActivity","setModelError","alteredPrompt","randomIndex","Math","floor","random","seeds","length","fetch","method","headers","body","JSON","stringify","modelID","then","response","json","responseData","splitPrompt","split","lPrompt","substring","slice","replace","sPrompt","catch","error","Inference","inferrenceButton","setModelMessage","guidance","steps","setReturnedPrompt","setInferredImage","encodedImage","setEncodedImage","scaledIP","none","key2","up","block_0","down","block_2","scale","output","ipScaleHolder","key1","assetImage","App","useFonts","Sigmar","inferredImage","setModelID","setParameters","modelError","returnedPrompt","shortPrompt","setPromptLengthValue","modelMessage","flanPrompt","passModelIDWrapper","swapImage","titlecontainer","BreathingComponent","ScrollView","scrollY","showsVerticalScrollIndicator","swapButton","top","left","leftColumnContainer","rightColumnContainer","imageStyle","swapButtonColumn","StatusBar","right","bottom","zIndex","rootElement","document","getElementById","createRoot","render","MainApp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}