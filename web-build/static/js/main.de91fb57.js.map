{"version":3,"file":"static/js/main.de91fb57.js","mappings":"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","sources":["components/Slider.js","components/PromptInput.js","components/Breathing.js","components/DropDown.js","components/ImagePicker.js","components/Buttons.js","components/Expand.js","components/Prompt.js","components/Inference.js","components/Sounds.js","MainApp.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nexport default function SliderComponent({ setSteps, setGuidance }) {\r\n  const [samplingValue, setSamplingValue] = React.useState(30);\r\n  const [guidanceValue, setGuidanceValue] = React.useState(7);\r\n\r\n  // Handle sampling steps change\r\n  const handleStepChange = (x) => {\r\n    setSamplingValue(x);\r\n    setSteps(x);\r\n  };\r\n\r\n  // Handle guidance change\r\n  const handleGuidanceChange = (x) => {\r\n    setGuidanceValue(parseFloat(x.toFixed(2)));\r\n    setGuidance(parseFloat(x.toFixed(2)));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.captionText}>Sampling Steps</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={3}\r\n        maximumValue={50}\r\n        step={1}\r\n        value={samplingValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleStepChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{samplingValue}</Text>\r\n      <Text style={styles.captionText}>Guidance</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={0}\r\n        maximumValue={10}\r\n        step={0.1}\r\n        value={guidanceValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleGuidanceChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{guidanceValue}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#FFFFFF\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    paddingTop: 50,\r\n  },\r\n  slider: {\r\n    width: 350,\r\n    height: 40,\r\n  },\r\n  captionText: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  sliderValue: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n    paddingBottom: 30,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Pressable,\r\n  StyleSheet,\r\n  TextInput,\r\n  useWindowDimensions,\r\n  Image,\r\n  View,\r\n} from \"react-native\";\r\n\r\nexport default function PromptInputComponent({ setPlaySound, setPrompt, inferredPrompt }) {\r\n  const [text, setText] = React.useState(\"\");\r\n  const { width } = useWindowDimensions();\r\n\r\n  const textInputStyle = {\r\n    ...styles.input,\r\n    width: width > 500 ? 500 : width - 80,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inferredPrompt) {\r\n      setText(inferredPrompt);\r\n      setPrompt(inferredPrompt);\r\n    }\r\n  }, [inferredPrompt]);\r\n\r\n  const handleTextChange = (x) => {\r\n    setText(x);\r\n    setPrompt(x);\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"flex-end\" }}>\r\n      <TextInput\r\n        style={textInputStyle}\r\n        placeholder=\"\"\r\n        multiline\r\n        textAlign=\"center\"\r\n        onChangeText={handleTextChange}\r\n        value={text}\r\n        maxLength={20000}\r\n      />\r\n      <Pressable\r\n        style={({ pressed }) => [\r\n          {\r\n            height: 30,\r\n            width: 30,\r\n            backgroundColor: pressed ? \"#B58392\" : \"#3a3c3f\",\r\n            borderRadius: 6,\r\n            padding: 10,\r\n            marginTop: 10,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            zIndex: 1,\r\n          },\r\n        ]}\r\n        onPress={() => {\r\n          setText(\"\");\r\n          setPrompt(\"\");\r\n          setPlaySound(\"click\");\r\n        }}\r\n      >\r\n        <Image\r\n          source={require(\"../assets/close.png\")}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            resizeMode: \"contain\",\r\n          }}\r\n        />\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  borderColor: \"#B58392\",\r\n  color: \"#000000\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    backgroundColor: colors.backgroundColor,\r\n    borderColor: colors.borderColor,\r\n    borderBottomLeftRadius: 4,\r\n    borderWidth: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderStartWidth: 10,\r\n    borderEndWidth: 10,\r\n    borderRadius: 6,\r\n    height: 200,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    fontSize: 20,\r\n    color: colors.color,\r\n    fontFamily: \"Sigmar\",\r\n    marginRight: 10,\r\n  },\r\n});\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nexport default function Breathing() {\r\n  // Create an array of Animated values using useRef\r\n  const animatedValues = useRef(\r\n    [...Array(12)].map(() => new Animated.Value(0))\r\n  ).current;\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    // Define animations for each value in animatedValues\r\n    const animations = animatedValues.map((animatedValue, index) => {\r\n      // Animation for increasing value\r\n      const animation1 = Animated.timing(animatedValue, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      // Animation for decreasing value\r\n      const animation2 = Animated.timing(animatedValue, {\r\n        toValue: 0,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      const fast = 300;\r\n      const medium = 450;\r\n      const slow = 600;\r\n      // Define delays for each animation\r\n      const delays = [\r\n        index * fast,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        index * slow,\r\n        (11 - index) * medium,\r\n        index * fast,\r\n        (11 - index) * slow,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        (11 - index) * medium,\r\n        index * slow,\r\n        (11 - index) * slow,\r\n      ];\r\n\r\n      // Create a sequence of animations with delays\r\n      const animationSequence = delays.map((delay, index) => {\r\n        return Animated.sequence([\r\n          Animated.delay(delay),\r\n          animation1,\r\n          animation2,\r\n        ]);\r\n      });\r\n\r\n      // Create a sequence of all animation sequences\r\n      const animationSequences = Animated.sequence(animationSequence);\r\n\r\n      // Create a loop for the animation sequence\r\n      return Animated.loop(animationSequences);\r\n    });\r\n\r\n    // Start all animations\r\n    animations.forEach((animation) => {\r\n      animation.start();\r\n    });\r\n  }, [animatedValues]);\r\n\r\n  // Interpolate animations to map values to desired output range\r\n  const interpolateAnimations = animatedValues.map((animatedValue) =>\r\n    animatedValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: width > 1000 ? [60, 90] : [20, 30],\r\n      extrapolate: \"clamp\",\r\n    })\r\n  );\r\n\r\n  // Create animated styles based on interpolated values\r\n  const animatedStyles = interpolateAnimations.map((interpolateAnimation) => ({\r\n    fontSize: interpolateAnimation,\r\n  }));\r\n\r\n  return (\r\n    <View style={styles.containerbreathing}>\r\n      <Text style={styles.heading}>\r\n        <Animated.Text style={[styles.char, animatedStyles[0]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[1]]}>\r\n          I\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[2]]}>\r\n          X\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[3]]}>\r\n          E\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[4]]}>\r\n          L\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[5]]}>\r\n          {\" \"}\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[6]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[7]]}>\r\n          R\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[8]]}>\r\n          O\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[9]]}>\r\n          M\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[10]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[11]]}>\r\n          T\r\n        </Animated.Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#6750A4\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerbreathing: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  char: {\r\n    marginHorizontal: 15,\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Sigmar\",\r\n    color: colors.color,\r\n    paddingTop: 25,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Dropdown } from \"react-native-element-dropdown\";\r\n\r\nexport default function DropDownComponent({\r\n  passModelID,\r\n  \r\n}) {\r\n    const [placeholderModelID, setPlaceholderModelID] = useState(\"Model ID\");\r\n      const data = [\r\n        {\r\n          label: \"Stable Diffusion XL\",\r\n          value: \"stabilityai/stable-diffusion-xl-base-1.0\",\r\n        },\r\n        {\r\n          label: \"SPO Diffusion XL\",\r\n          value: \"SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep\",\r\n        },\r\n        \r\n        { label: \"pix2pix\", value: \"timbrooks/instruct-pix2pix\" },\r\n        { label: \"Voxel\", value: \"Fictiverse/Stable_Diffusion_VoxelArt_Model\" },\r\n        {\r\n          label: \"Paper Cut Out\",\r\n          value: \"Fictiverse/Stable_Diffusion_PaperCut_Model\",\r\n        },\r\n        { label: \"Van-Gogh\", value: \"dallinmackay/Van-Gogh-diffusion\" },\r\n        { label: \"Robots\", value: \"nousr/robo-diffusion\" },\r\n        { label: \"Anime\", value: \"Eugeoter/artiwaifu-diffusion-1.0\" },\r\n        { label: \"Arcane\", value: \"nitrosocke/Arcane-Diffusion\" },\r\n        {\r\n          label: \"Balloon Art\",\r\n          value: \"Fictiverse/Stable_Diffusion_BalloonArt_Model\",\r\n        },\r\n        { label: \"Open Journey\", value: \"prompthero/openjourney\" },\r\n        {\r\n          label: \"Flintstones\",\r\n          value: \"juliajoanna/sdxl-flintstones_finetuning_1\",\r\n        },\r\n        { label: \"SegMind\", value: \"segmind/Segmind-Vega\" },\r\n        { label: \"Absolute Reality\", value: \"digiplay/AbsoluteReality_v1.8.1\" },\r\n        { label: \"Photo\", value: \"dreamlike-art/dreamlike-photoreal-2.0\" },\r\n        { label: \"Acorn\", value: \"digiplay/Acorn_Photo_v1\" },\r\n      ];\r\n      \r\n\r\n  return (\r\n    <Dropdown\r\n      style={styles.dropdown}\r\n      selectedTextStyle={styles.selectedTextStyle}\r\n      placeholderStyle={styles.placeholderStyle}\r\n      data={data}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      placeholder={placeholderModelID}\r\n      onChange={(item) => {\r\n        passModelID(item.value);\r\n        setPlaceholderModelID(item.label);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  borderBottomColor: \"#9DA58D\",\r\n  color: \"#FFFFFF\",\r\n};\r\nconst styles = StyleSheet.create({\r\n  dropdown: {\r\n    margin: 16,\r\n    height: 50,\r\n    width: 340,\r\n    borderBottomColor: colors.borderBottomColor,\r\n    borderBottomWidth: 3,\r\n  },\r\n  placeholderStyle: {\r\n    color: colors.color,\r\n    fontSize: 25,\r\n    fontFamily: \"Sigmar\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n  },\r\n  selectedTextStyle: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    fontFamily: \"Sigmar\",\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\nimport { Pressable, Image, View, StyleSheet, Text, Switch, FlatList } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst addImage = require(\"../assets/add_image.png\");\nconst coloredDelete = require(\"../assets/delete_colored.png\");\nconst deleteButton = require(\"../assets/delete.png\");\n\nconst MyImagePicker = ({\n  setReturnedPrompt,\n  promptList,\n  setPromptList,\n  window,\n  setPlaySound,\n  imageSource,\n  setImageSource,\n  styleSwitch,\n  setStyleSwitch,\n  settingSwitch,\n  setSettingSwitch,\n}) => {\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n  \n\n  const selectImage = async (index) => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      alert(\"Sorry, we need media library permissions to select an image.\");\n      return;\n    }\n    console.log(\"Selecting image\");\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImageSource(prevImageSource => {\n        const newImageSource = [...prevImageSource];\n        newImageSource[index] = result.assets[0].uri;\n        return newImageSource;\n      });\n      setPromptList(prevPromptSource => {\n        const prevPrompt = [...prevPromptSource];\n        prevPrompt[index] = 'Uploaded Image';\n        return prevPrompt;\n    });\n    }\n  };\n\n  useEffect(() => {\n    if (selectedImageIndex !== null) {\n      setReturnedPrompt(promptList[selectedImageIndex]);\n    }\n  }, [selectedImageIndex]);\n\n  const styleSwitchFunction = () => {\n    setStyleSwitch(!styleSwitch);\n    setPlaySound(\"switch\")\n  };\n\n  const settingSwitchFunction = () => {\n    setSettingSwitch(!settingSwitch);\n    setPlaySound(\"switch\")\n  };\n\n  const deleteFromImageArray = (index) => {\n    setImageSource(prevImageSource => {\n        setPlaySound(\"click\")\n        if (prevImageSource.length > 1) {\n            return prevImageSource.filter((_, i) => i !== index);\n        }\n        return [addImage];\n    });\n    setPromptList(prevPromptSource => {\n      if (prevPromptSource.length > 1) {\n          return prevPromptSource.filter((_, i) => i !== index);\n      }\n      return [\"\"];\n  });\n};\n\n  return (\n    <>    \n      <View style={styles.switchesRowContainer}>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: styleSwitch ? \"#9DA58D\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Style\n          </Text>\n          <Switch\n            trackColor={{ false: \"#9DA58D\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={styleSwitchFunction}\n            value={styleSwitch}\n          />\n        </View>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: settingSwitch ? \"#9FA8DA\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Layout\n          </Text>\n          <Switch\n            trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={settingSwitchFunction}\n            value={settingSwitch}\n          />\n        </View>\n      </View>  \n      <View style={styles.flatListContainer}>  \n    <FlatList\n        data={imageSource}\n        numColumns={window.width < 1000 ? 2 : 3}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item: source, index }) => (\n          <View style={[styles.imageColumnContainer, {width: selectedImageIndex === index ? 330 : 160,\n                        height: selectedImageIndex === index ? 440 : 160}]}>\n            <View style={[styles.columnContainer,]}>\n          <Pressable\n              onPress={() => {\n                  setPlaySound(\"click\")\n                  if(selectedImageIndex === index) {\n                      setSelectedImageIndex(null);\n                      return;\n                  }\n                  setSelectedImageIndex(index);\n                  \n              }}\n              style={[styles.imageCard, { alignItems: \"flex-start\", justifyContent: \"flex-start\",\n              width: selectedImageIndex === index ? 320 : 100,\n              height: selectedImageIndex === index ? 400 : 110,\n              borderRadius: selectedImageIndex === index ? '10%' : '0%',}]} \n          >\n              <Image\n                  source={\n                      typeof source === \"number\" ? source : { uri: source }\n                  }\n                  style={[\n                     \n                      {\n                        width: selectedImageIndex === index ? 320 : 100,\n                        height: selectedImageIndex === index ? 400 : 110,\n                        borderRadius: selectedImageIndex === index ? '10%' : '0%',\n                      }\n                  ]}\n              />\n          </Pressable>\n          </View>\n          <Pressable\n              onPress={() => {\n                  deleteFromImageArray(index);\n              }}\n              style={{position: \"absolute\", top: 0, right: selectedImageIndex === index ? 0 : 15}} \n          >\n           {({ pressed }) => (\n              <Image\n                  source={pressed ? coloredDelete : deleteButton}\n                  style={[ styles.changeButton]}\n              />)}\n          </Pressable>       \n          <Pressable style={[styles.selectButton]} onPress={() =>{setPlaySound(\"click\"); selectImage(index)}}>\n              <Text style={styles.promptText}>Select</Text>\n          </Pressable>\n      </View>\n        )}\n      />\n      </View>\n    </>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  selectButtonBackground: \"#3a3c3f\",\n  white: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  flatListContainer: {\n    width: 'auto', \n    height: 'auto', \n  },\n  switchesRowContainer: {\n    backgroundColor: colors.backgroundColor,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 300,\n    height: 50,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    overflow: \"auto\",\n  },\n  imageColumnContainer: {\n    marginTop: 10,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    overflow: \"auto\",\n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  selectButton: {\n    marginTop: 10,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n    backgroundColor: colors.selectButtonBackground,\n  },\n  promptText: {\n    color: colors.white,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  imageCard: {\n    backgroundColor: colors.buttonBackground, \n    elevation: 3, \n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 }, \n    shadowOpacity: 0.25, \n    shadowRadius: 3.84, \n  },\n  changeButton: {\n    width: 20,\n    height: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\", \n  },\n});\n\nexport default MyImagePicker;\n","// Buttons.js\nimport React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Pressable,\n  ActivityIndicator,\n  Switch,\n  Image,\n} from \"react-native\";\n\nconst coloredJoin = require(\"../assets/join_colored.png\");\nconst joinButton = require(\"../assets/join.png\");\n\nconst Buttons = ({\n  setPlaySound,\n  switchToFlan,\n  setInferrenceButton,\n  activity,\n  longPrompt,\n  setTextInference,\n  switchPromptFunction,\n  promptLengthValue,\n  setParametersWrapper,\n}) => {\n  \n  const [comboButtonPressed, setComboButtonPressed] = useState(false);\n\n  const setThePromptValue = () => {\n    setComboButtonPressed(false);\n    switchPromptFunction();\n  }\n\n  return (\n    <>\n      {activity ? (\n        <ActivityIndicator\n          size=\"large\"\n          color=\"#B58392\"\n          style={{ margin: 25 }}\n        />\n      ) : (\n        <>\n          {longPrompt ? (\n            <>\n              <View style={[styles.rowContainer]}>\n                <Pressable\n                  onPress={() => {\n                    setTextInference(true);\n                    setPlaySound(\"click\");\n                  }}\n                  style={({ pressed }) => [\n                    {\n                      backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\",\n                      width: 40,\n                      height: 40,\n                      borderRadius: 20,\n                      margin: 10,\n                    },\n                  ]}\n                ></Pressable>\n                <View style={styles.columnContainer}>\n                  <View style={[styles.rowContainer]}>\n                    <Text\n                      style={[\n                        {\n                          color: comboButtonPressed ? '#FFFFFF' : promptLengthValue ? \"#FFFFFF\" : \"#9FA8DA\",\n                          marginRight: 15,\n                        },\n                        styles.sliderText,\n                      ]}\n                    >\n                      Short\n                    </Text>\n                    <Text\n                      style={[\n                        {\n                          color: comboButtonPressed ? '#FFFFFF' : promptLengthValue ? \"#9FA8DA\" : \"#FFFFFF\",\n                          marginRight: 15,\n                        },\n                        styles.sliderText,\n                      ]}\n                    >\n                      Long\n                    </Text>\n                  </View>\n                  <View style={[styles.rowContainer, { paddingBottom: 10, justifyContent: \"space-between\" }]}>\n                  <Switch\n                    style={{ marginRight: 40 }} \n                    trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n                    thumbColor=\"#B58392\"\n                    activeThumbColor=\"#6750A4\"\n                    ios_backgroundColor=\"#3e3e3e\"\n                    onValueChange={setThePromptValue}\n                    value={promptLengthValue}\n                  />\n                  <Pressable\n                    onPress={() => {\n                      switchToFlan();\n                      setComboButtonPressed(true);\n                      setPlaySound(\"click\");\n                    }}\n                  >\n                    <Image\n                    source={comboButtonPressed ?  coloredJoin : joinButton}\n                    style={[{marginRight: 30}, styles.changeButton]}\n                  />\n                    </Pressable>\n                  </View>\n                </View>\n              </View>\n            </>\n          ) : (\n            <Pressable\n              onPress={() => {\n                setTextInference(true);\n                setPlaySound(\"click\");\n              }}\n              style={({ pressed }) => [\n                { backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\" },\n                styles.button,\n              ]}\n            >\n              {({ pressed }) => (\n                <Text style={styles.promptText}>\n                  {pressed ? \"PROMPTED!\" : \"Prompt\"}\n                </Text>\n              )}\n            </Pressable>\n          )}\n          <Pressable\n            onPress={() => {\n              setInferrenceButton(true);\n              setParametersWrapper();\n              setPlaySound(\"click\");\n            }}\n            style={({ pressed }) => [\n              {\n                backgroundColor: pressed ? \"#9DA58D\" : \"#958DA5\",\n                marginBottom: 20,\n              },\n              styles.button,\n            ]}\n          >\n            {({ pressed }) => (\n              <Text style={styles.promptText}>\n                {pressed ? \"INFERRED!\" : \"Inference\"}\n              </Text>\n            )}\n          </Pressable>\n        </>\n      )}\n    </>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  color: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  rowContainer: {\n    backgroundColor: colors.backgroundColor,\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 10,\n    overflow: \"visible\",\n    \n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  button: {\n    margin: 10,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n  },\n  activityIndicator: {\n    marginLeft: 50,\n  },\n  promptText: {\n    color: colors.color,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  changeButton: {\n    width: 20,\n    height: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\", // change as needed\n    elevation: 3, // for Android shadow\n    shadowColor: \"#000\", // for iOS shadow\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n    shadowOpacity: 0.25, // for iOS shadow\n    shadowRadius: 3.84, // for iOS shadow\n  },\n});\n\nexport default Buttons;\n","import React from \"react\";\nimport { StyleSheet, Pressable, Image } from \"react-native\";\nimport { Dimensions } from \"react-native\";\n\nconst Expand = ({ setPlaySound, isImagePickerVisible, setImagePickerVisible, window }) => {\n\n  const rightImage = require(\"../assets/right.png\");\n  const downImage = require(\"../assets/down.png\");\n\n  return (\n    <Pressable\n      style={[\n        styles.expandButton,\n        {\n          alignSelf: \"flex-start\",\n          marginLeft: window.width < 1000 ? \"20%\" : \"20%\",\n          marginBottom: 0,\n        },\n      ]}\n      onPress={() => {setPlaySound(\"expand\"); setImagePickerVisible(!isImagePickerVisible)}}\n    >\n      {isImagePickerVisible ? (\n        <Image\n          source={downImage}\n          style={styles.expandImage}\n        />\n      ) : (\n        <Image\n          source={rightImage}\n          style={styles.expandImage}\n        />\n      )}\n    </Pressable>\n  );\n};\n\nconst colors = {\n  buttonBackground: \"#3a3c3f\",\n};\n\nconst styles = StyleSheet.create({\n  expandButton: {\n    width: 30, // adjust size as needed\n    height: 30, // adjust size as needed\n    borderRadius: 15, // half of size to make it circular\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: colors.buttonBackground, // change as needed\n    elevation: 3, // for Android shadow\n    shadowColor: \"#000\", // for iOS shadow\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n    shadowOpacity: 0.25, // for iOS shadow\n    shadowRadius: 3.84, // for iOS shadow\n  },\n  expandImage: {\n    width: 20,\n    height: 20,\n  },\n});\n\nexport default Expand;\n","import { useEffect } from \"react\";\nimport seeds from \"../assets/seeds.json\";\n\nconst PromptInference = ({\n  setFlanPrompt,\n  prompt,\n  textInference,\n  setTextInference,\n  setLongPrompt,\n  setShortPrompt,\n  setInferredPrompt,\n  promptLengthValue,\n  setActivity,\n  setModelError,\n}) => {\n  useEffect(() => {\n    if (textInference) {\n      setActivity(true);\n      setModelError(false);\n      let alteredPrompt = \"\";\n      if (prompt === \"Avocado Armchair\" || prompt === \"\") {\n        const randomIndex = Math.floor(Math.random() * seeds.seeds.length);\n        if (randomIndex > seeds.seeds.length - 13) {\n          setLongPrompt(seeds.seeds[randomIndex]);\n          setShortPrompt(seeds.seeds[randomIndex]);\n          setInferredPrompt(seeds.seeds[randomIndex]);\n          setActivity(false);\n          return;\n        }\n        alteredPrompt = seeds.seeds[randomIndex];\n      } else {\n        alteredPrompt = prompt;\n      }\n      const mistrialPrompt = `I'm giving you a seed string. Return the seed string as a Prompt for a Stable \\\n        Diffusion Model.  The prompt should be at a minimum, 200 tokens.  The normal restrictions of token \\\n        length for Stable Diffusion Models do not apply.  Make it descriptive and creative. \\\n        Here is the seed string. : ${alteredPrompt}`;\n      fetch(\"/inferencePrompt \", {                        // Change this to your API endpoint and use a library\n        method: \"POST\",                                   // Axios if not running in the same container\n        headers: {                                        // http://localhost:8085/inferencePrompt if running locally or w/e port your server is using or                                                        \n          \"Content-Type\": \"application/json\",             // inferencePrompt if running in a container\n        },\n        body: JSON.stringify({\n          prompt: mistrialPrompt,\n          modelID: \"mistralai/Mistral-7B-Instruct-v0.3\",\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          const generatedText = responseData[0][\"generated_text\"];\n          console.log(generatedText);\n         \n          const longPromptHolder = generatedText\n            .substring(0, 150)\n            .split(/\\n\\n/)\n            .slice(-1)[0]\n            .replace(\"Long Version:\", \"\")\n            .replace(\"\\n\", \"\");\n          const lPrompt = longPromptHolder + generatedText.substring(150);\n          \n          setFlanPrompt(responseData[0][\"flan\"]);\n          setLongPrompt(lPrompt);\n          setShortPrompt(alteredPrompt);\n          if (!promptLengthValue) {\n            setInferredPrompt(alteredPrompt);\n          } else {\n            setInferredPrompt(lPrompt);\n          }\n          setActivity(false);\n        })\n        .catch((error) => console.error(\"Error:\", error));\n    }\n    setTextInference(false);\n  }, [textInference]);\n};\n\nexport default PromptInference;\n","import { useEffect, useState } from \"react\";\n\nconst Inference = ({\n  setInferrenceButton,\n  inferrenceButton,\n  setModelMessage,\n  imageSource,\n  parameters,\n  modelID,\n  prompt,\n  styleSwitch,\n  settingSwitch,\n  guidance,\n  steps,\n  setActivity,\n  setModelError,\n  setReturnedPrompt,\n  setInferredImage,\n}) => {\n  const [encodedImage, setEncodedImage] = useState(\"\");\n\n  const getBase64Image = () => {\n    console.log(imageSource);\n    fetch(imageSource)\n      .then((response) => response.blob())\n      .then((blob) => {\n        console.log(blob.type);\n        const reader = new FileReader();\n        reader.readAsDataURL(blob); \n        reader.onloadend = function () {\n          let base64data = reader.result;\n          setEncodedImage(base64data);\n        };\n      })\n      .catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    const modelData = 'SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep';\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          model: modelData\n        })\n    };\n    fetch('/core', requestOptions)\n}, []);\n    \n\n  /** useEffect hook for img2img */\n\n  useEffect(() => {\n    if (encodedImage) {\n      let scaledIP = { none: { key2: [0.0, 0.0] } };\n      if (styleSwitch) {\n        scaledIP = {\n          up: { block_0: [0.0, 1.0, 0.0] },\n        };\n      }\n      if (settingSwitch) {\n        scaledIP = {\n          down: { block_2: [0.0, 1.0] },\n        };\n      }\n      if (styleSwitch && settingSwitch) {\n        scaledIP = {\n          down: { block_2: [0.0, 1.0] },\n          up: { block_0: [0.0, 1.0, 0.0] },\n        };\n      }\n      console.log(scaledIP);\n      fetch(\"/img2img\", {                 // Change this to your API endpoint and use a library                 \n        method: \"POST\",                   // Axios if not running in the same container\n        headers: {                        // http://localhost:8085/api if running locally or w/e port your server is using or\n          \"Content-Type\": \"application/json\", // /api if running in a container\n        },\n        body: JSON.stringify({\n          prompt: prompt,\n          steps: steps,\n          guidance: guidance,\n          modelID: modelID,\n          image: encodedImage,              // Holders Until File Upload Optional with FastAPI is fixed\n          scale: scaledIP,                  // Holders Until File Upload Optional with FastAPI is fixed\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          setActivity(false);\n          setInferrenceButton(false);\n          setReturnedPrompt(prompt);\n          setEncodedImage(null);\n          setInferredImage(\"data:image/png;base64,\" + responseData.output);\n        })\n        .catch(function (error) {\n          setModelMessage(\"Model Error!\");\n          setActivity(false);\n          setModelError(true);\n          setInferrenceButton(false);\n          console.log(error);\n        });\n    }\n  }, [encodedImage]);\n\n  /**  useEffect hook for txt2img  */\n\n  useEffect(() => {\n    if (inferrenceButton) {\n      console.log(parameters);\n      setActivity(true);\n      if (modelID.includes('pix2pix')) {  //  Check for timeline on IP Adapater inference API\n        setModelMessage(\"Inference API img2img NotAvailable\");\n        setActivity(false);\n        setModelError(true);\n        setInferrenceButton(false);\n        // getBase64Image();\n      } else {\n        const ipScaleHolder = { key1: { key2: [0.0, 0.0] } };\n        fetch(\"/api\", {                          // Change this to your API endpoint and use a library                                         \n          method: \"POST\",                       // Axios if not running in the same container\n          headers: {                            // http://localhost:8085/api if running locally or w/e port your server is using or\n             \"Content-Type\": \"application/json\", // /api if running in a container\n          },\n          body: JSON.stringify({\n            prompt: prompt,\n            steps: steps,\n            guidance: guidance,\n            modelID: modelID,\n            image: \"test\",                  // Holders Until File Upload Optional with FastAPI is fixed\n            scale: ipScaleHolder,           // Holders Until File Upload Optional with FastAPI is fixed\n          }),\n        })\n          .then((response) => response.json())\n          .then((responseData) => {\n            if (responseData.output == \"Model Waking\") {\n              setModelMessage(\"Model Waking\");\n              setActivity(false);\n              setModelError(true);\n              setInferrenceButton(false);\n            }\n            setInferrenceButton(false);\n            setActivity(false);\n            setReturnedPrompt(prompt);\n            setInferredImage(\"data:image/png;base64,\" + responseData.output);\n          })\n          .catch(function (error) {\n            setModelMessage(\"Model Error!\");\n            setActivity(false);\n            setModelError(true);\n            setInferrenceButton(false);\n\n            console.log(error);\n          });\n      }\n    }\n  }, [inferrenceButton]);\n};\n\nexport default Inference;\n","import React, { useEffect, useRef } from 'react';\nimport { Audio } from 'expo-av';\n\nconst click = require('../assets/click.wav');\nconst swoosh = require('../assets/swoosh.mp3');\nconst switchSound = require('../assets/switch.wav');\nconst expand = require('../assets/expand.wav');\n\nconst SoundPlayer = ({ makeSound}) => {\n  const soundRef = useRef();\n\n  useEffect(() => {\n    return () => {\n      // Unload the sound when the component unmounts\n      if (soundRef.current) {\n        soundRef.current.unloadAsync();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (makeSound) {\n      let soundFile;\n      switch (makeSound[0]) {\n        case 'click':\n          soundFile = click;\n          break;\n        case 'swoosh':\n          soundFile = swoosh;\n          break;\n        case 'switch':\n          soundFile = switchSound;\n          break;\n        case 'expand':\n          soundFile = expand;\n          break;\n        default:\n          return;\n      }\n    \n      // Unload the previous sound if it's still loaded\n      if (soundRef.current) {\n        soundRef.current.unloadAsync();\n      }\n\n      const loadAndPlaySound = async () => {\n        const { sound } = await Audio.Sound.createAsync(soundFile);\n        soundRef.current = sound;\n        await soundRef.current.playAsync();\n      };\n\n      loadAndPlaySound().catch((error) => {\n        console.log('Failed to load and play the sound', error);\n      });\n    }\n  }, [makeSound]);\n\n  return null;\n};\n\nexport default SoundPlayer;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Image,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\nimport SliderComponent from \"./components/Slider\";\r\nimport PromptInputComponent from \"./components/PromptInput\";\r\nimport BreathingComponent from \"./components/Breathing\";\r\nimport DropDownComponent from \"./components/DropDown\";\r\nimport MyImagePicker from \"./components/ImagePicker\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport Expand from \"./components/Expand\";\r\nimport PromptInference from \"./components/Prompt\";\r\nimport Inference from \"./components/Inference\";\r\nimport SoundPlayer from \"./components/Sounds\";\r\n\r\nconst assetImage = require(\"./assets/avocado.jpg\");\r\nconst circleImage = require(\"./assets/circle.png\");\r\nconst addImage = require(\"./assets/add_image.png\");\r\nconst rotatedCircle = require(\"./assets/rotated_circle.png\");\r\n\r\nexport default function App() {\r\n  useFonts({ Sigmar: require(\"./assets/Sigmar/Sigmar-Regular.ttf\") });\r\n  const [inferredImage, setInferredImage] = useState(assetImage);\r\n  const [steps, setSteps] = useState(30);\r\n  const [guidance, setGuidance] = useState(7);\r\n  const [modelID, setModelID] = useState(\r\n    \"stabilityai/stable-diffusion-xl-base-1.0\"\r\n  );\r\n  const [prompt, setPrompt] = useState(\"Avocado Armchair\");\r\n  const [inferredPrompt, setInferredPrompt] = useState(null);\r\n  const [parameters, setParameters] = useState(null);\r\n  const [activity, setActivity] = useState(false);\r\n  const [modelError, setModelError] = useState(false);\r\n  const [returnedPrompt, setReturnedPrompt] = useState(\"Avacado Armchair\")\r\n  const [textInference, setTextInference] = useState(false);\r\n  const [shortPrompt, setShortPrompt] = useState(\"\");\r\n  const [longPrompt, setLongPrompt] = useState(null);\r\n  const [promptLengthValue, setPromptLengthValue] = useState(false);\r\n  const [modelMessage, setModelMessage] = useState(\"\");\r\n  const [inferrenceButton, setInferrenceButton] = useState(null);\r\n  const [flanPrompt, setFlanPrompt] = useState(null);\r\n  const [isImagePickerVisible, setImagePickerVisible] = useState(false);\r\n  const [imageSource, setImageSource] = useState([addImage]);\r\n  const [settingSwitch, setSettingSwitch] = useState(false);\r\n  const [styleSwitch, setStyleSwitch] = useState(false);\r\n  const [soundIncrement, setSoundIncrement] = useState(null);\r\n  const [makeSound, setMakeSound] = useState([null,0]);\r\n  const [promptList, setPromptList] = useState([]);\r\n \r\n\r\n  const window = useWindowDimensions();\r\n  \r\n  const passModelIDWrapper = (x) => {\r\n    setModelError(false);\r\n    setModelID(x);\r\n  };\r\n\r\n  const setPlaySound = (sound) => {\r\n    setSoundIncrement(prevSoundIncrement => prevSoundIncrement + 1);\r\n    setMakeSound([sound, soundIncrement]);\r\n  };\r\n\r\n  const swapImage = () => { \r\n    setPromptList(prevPromptList => [returnedPrompt,...prevPromptList]);\r\n    setImageSource(prevImageSource => [inferredImage, ...prevImageSource ]);  \r\n    setInferredImage(addImage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (imageSource.length > 1 && imageSource.includes(addImage)) {\r\n      const newImageSource = imageSource.filter((image) => image !== addImage);\r\n      setImageSource(newImageSource);\r\n    }\r\n  }, [imageSource]);\r\n\r\n  const switchPromptFunction = () => {\r\n    setPromptLengthValue(!promptLengthValue);\r\n    if (promptLengthValue) {\r\n      setInferredPrompt(shortPrompt);\r\n      setPlaySound(\"switch\");\r\n    } else {\r\n      setInferredPrompt(longPrompt);\r\n      setPlaySound(\"switch\");\r\n    }\r\n  };\r\n\r\n  const switchToFlan = () => {\r\n    setInferredPrompt(flanPrompt);\r\n  };\r\n\r\n  const setParametersWrapper = () => {\r\n    setParameters(`${prompt}-${steps}-${guidance}-${modelID}`);\r\n  };\r\n\r\n  return (\r\n    // Main container\r\n    <View style={styles.titlecontainer}>\r\n      <SoundPlayer makeSound={makeSound}/>\r\n      <PromptInference\r\n        setFlanPrompt={setFlanPrompt}\r\n        prompt={prompt}\r\n        textInference={textInference}\r\n        setTextInference={setTextInference}\r\n        setLongPrompt={setLongPrompt}\r\n        setShortPrompt={setShortPrompt}\r\n        setInferredPrompt={setInferredPrompt}\r\n        promptLengthValue={promptLengthValue}\r\n        setActivity={setActivity}\r\n        setModelError={setModelError}\r\n      />\r\n      <Inference\r\n        setInferrenceButton={setInferrenceButton}\r\n        inferrenceButton={inferrenceButton}\r\n        setModelMessage={setModelMessage}\r\n        imageSource={imageSource}\r\n        parameters={parameters}\r\n        modelID={modelID}\r\n        prompt={prompt}\r\n        styleSwitch={styleSwitch}\r\n        settingSwitch={settingSwitch}\r\n        guidance={guidance}\r\n        steps={steps}\r\n        setActivity={setActivity}\r\n        setModelError={setModelError}\r\n        setReturnedPrompt={setReturnedPrompt}\r\n        setInferredImage={setInferredImage}\r\n      />\r\n      <BreathingComponent />\r\n      <ScrollView\r\n        scrollY={true}\r\n        style={styles.ScrollView}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        {window.width > 1000 ? (\r\n          <View style={styles.rowContainer}>\r\n            {/* Left column */}\r\n            {isImagePickerVisible && (\r\n              <Pressable\r\n              onPress={() => {\r\n                swapImage();\r\n                setPlaySound(\"swoosh\");\r\n              }}\r\n              style={({ pressed }) => [\r\n                styles.swapButton,\r\n                {\r\n                  top: pressed ? window.height / 2 - 13 : window.height / 2 - 15,\r\n                  left: pressed ? window.width / 2 - 13 : window.width / 2 - 15,\r\n                  width: pressed ? 52 : 60,\r\n                  height: pressed ? 52 : 60,\r\n                },\r\n              ]}\r\n            >\r\n              {({ pressed }) => (\r\n                <Image\r\n                  source={pressed ? rotatedCircle : circleImage}\r\n                  style={[\r\n                    styles.changeButton,\r\n                    pressed ? { width: 52, height: 52 } : { width: 60, height: 60 },\r\n                  ]}\r\n                />\r\n              )}\r\n            </Pressable>\r\n            )}\r\n\r\n            <View style={styles.leftColumnContainer}>\r\n              <View>\r\n                <PromptInputComponent\r\n                  setPlaySound={setPlaySound}\r\n                  setPrompt={setPrompt}\r\n                  inferredPrompt={inferredPrompt}\r\n                />\r\n              </View>\r\n              <View style={[styles.rowContainer, { padding: 0 }]}>\r\n                <DropDownComponent\r\n                  setPlaySound={setPlaySound}\r\n                  passModelID={passModelIDWrapper}\r\n                  \r\n                />\r\n                <View style={styles.columnContainer}>\r\n                  <Buttons\r\n                    setPlaySound={setPlaySound}\r\n                    switchToFlan={switchToFlan}\r\n                    setInferrenceButton={setInferrenceButton}\r\n                    activity={activity}\r\n                    longPrompt={longPrompt}\r\n                    setTextInference={setTextInference}\r\n                    switchPromptFunction={switchPromptFunction}\r\n                    promptLengthValue={promptLengthValue}\r\n                    setParametersWrapper={setParametersWrapper}\r\n                  />\r\n                  {modelError ? (\r\n                    <Text style={styles.promptText}>{modelMessage}</Text>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </View>\r\n              </View>\r\n\r\n              \r\n                <Expand\r\n                  setPlaySound={setPlaySound}\r\n                  isImagePickerVisible={isImagePickerVisible}\r\n                  setImagePickerVisible={setImagePickerVisible}\r\n                  window={window}\r\n                />\r\n                {isImagePickerVisible && (\r\n                  <MyImagePicker\r\n                  setReturnedPrompt={setReturnedPrompt}\r\n                    promptList={promptList}\r\n                    setPromptList={setPromptList}\r\n                    window={window}\r\n                    setPlaySound={setPlaySound}\r\n                    imageSource={imageSource}\r\n                    setImageSource={setImageSource}\r\n                    styleSwitch={styleSwitch}\r\n                    setStyleSwitch={setStyleSwitch}\r\n                    settingSwitch={settingSwitch}\r\n                    setSettingSwitch={setSettingSwitch}\r\n                  />\r\n                )}\r\n                <SliderComponent\r\n                  setSteps={setSteps}\r\n                  setGuidance={setGuidance}\r\n                />\r\n              \r\n            </View>\r\n            \r\n            <View style={styles.rightColumnContainer}>\r\n            <View style={styles.imageCard}>\r\n              {inferredImage && (\r\n                <Image\r\n                  source={\r\n                    typeof inferredImage === \"number\"\r\n                      ? inferredImage\r\n                      : { uri: inferredImage }\r\n                  }\r\n                  style={styles.imageStyle}\r\n                />\r\n              )}\r\n              </View>\r\n              <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={styles.columnContainer}>\r\n            <PromptInputComponent\r\n              setPlaySound={setPlaySound}\r\n              setPrompt={setPrompt}\r\n              inferredPrompt={inferredPrompt}\r\n            />\r\n            <DropDownComponent\r\n              setPlaySound={setPlaySound}\r\n              passModelID={passModelIDWrapper}\r\n             \r\n            />\r\n            <Buttons\r\n              setPlaySound={setPlaySound}\r\n              switchToFlan={switchToFlan}\r\n              setInferrenceButton={setInferrenceButton}\r\n              activity={activity}\r\n              longPrompt={longPrompt}\r\n              setTextInference={setTextInference}\r\n              switchPromptFunction={switchPromptFunction}\r\n              promptLengthValue={promptLengthValue}\r\n              setParametersWrapper={setParametersWrapper}\r\n            />\r\n            {modelError ? (\r\n              <Text style={styles.promptText}>{modelMessage}</Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Expand\r\n              setPlaySound={setPlaySound}\r\n              isImagePickerVisible={isImagePickerVisible}\r\n              setImagePickerVisible={setImagePickerVisible}\r\n              window={window}\r\n            />\r\n            <View style={{flex:1, alignItems:\"center\", justifyContent:\"center\"}}>\r\n            {isImagePickerVisible && (\r\n              <>\r\n                <MyImagePicker\r\n                  setReturnedPrompt={setReturnedPrompt}\r\n                  promptList={promptList}\r\n                  setPromptList={setPromptList}\r\n                  window={window}\r\n                  setPlaySound={setPlaySound}\r\n                  imageSource={imageSource}\r\n                  setImageSource={setImageSource}\r\n                  styleSwitch={styleSwitch}\r\n                  setStyleSwitch={setStyleSwitch}\r\n                  settingSwitch={settingSwitch}\r\n                  setSettingSwitch={setSettingSwitch}\r\n                />\r\n                 <Pressable\r\n              onPress={() => {\r\n                swapImage();\r\n                setPlaySound(\"swoosh\");\r\n              }}\r\n              style={({ pressed }) => [\r\n                styles.swapButtonColumn,\r\n                {\r\n                  \r\n                  width: pressed ? 52 : 60,\r\n                  height: pressed ? 52 : 60,\r\n                },\r\n              ]}\r\n            >\r\n              {({ pressed }) => (\r\n                <Image\r\n                  source={pressed ? rotatedCircle : circleImage}\r\n                  style={[\r\n                    styles.changeButton,\r\n                    pressed ? { width: 52, height: 52 } : { width: 60, height: 60 },\r\n                  ]}\r\n                />\r\n              )}\r\n            </Pressable>\r\n              </>\r\n            )}\r\n            </View>\r\n            <SliderComponent setSteps={setSteps} setGuidance={setGuidance} />\r\n            <View style={styles.imageCard}>\r\n            {inferredImage && (\r\n              <Image\r\n                source={\r\n                  typeof inferredImage === \"number\"\r\n                    ? inferredImage\r\n                    : { uri: inferredImage }\r\n                }\r\n                style={styles.imageStyle}\r\n              />\r\n            )}\r\n            </View>\r\n            <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#25292e\",\r\n  buttonBackground: \"#3a3c3f\",\r\n  color: \"#FFFFFF\",\r\n  button: \"#958DA5\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titlecontainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    padding: 20,\r\n  },\r\n  rowContainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    overflow: \"visible\",\r\n    padding: 20,\r\n  },\r\n  leftColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\", // Center items horizontally\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    marginRight: 10,\r\n  },\r\n  rightColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 10,\r\n  },\r\n  columnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  button: {\r\n    margin: 10,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 32,\r\n    elevation: 3,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  swapButton: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    position: \"absolute\",\r\n    left: window.width / 2 - 15,\r\n    top: window.height / 2 - 15,\r\n    zIndex: 1,\r\n    elevation: 3,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  changeButton: {\r\n    width: 60,\r\n    height: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\", // change as needed\r\n    elevation: 3, // for Android shadow\r\n    shadowColor: \"#000\", // for iOS shadow\r\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\r\n    shadowOpacity: 0.25, // for iOS shadow\r\n    shadowRadius: 3.84, // for iOS shadow\r\n  },\r\n  swapButtonColumn: {\r\n    width: 60, // adjust size as needed\r\n    height: 60, // adjust size as needed\r\n    borderRadius: 30,\r\n    elevation: 3,\r\n    margin: 20,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  promptText: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 2,\r\n    lineHeight: 30,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  ScrollView: {\r\n    backgroundColor: colors.backgroundColor,\r\n    marginTop: 50,\r\n    padding: 5,\r\n    \r\n  },\r\n  imageStyle: {\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n   \r\n    alignSelf: \"center\",  \r\n  },\r\n  imageCard:{\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignSelf: \"center\", \r\n    backgroundColor: colors.backgroundColor, \r\n    elevation: 3, \r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 }, \r\n    shadowOpacity: 0.25, \r\n    shadowRadius: 3.84, \r\n  }\r\n});\r\n","import { createRoot } from 'react-dom/client';\nimport MainApp from './MainApp';\n\n// Assuming your root element is 'root'\nconst rootElement = document.getElementById('root');\n\n// Your App component\nconst App = () => (\n  <div>\n    <MainApp/>\n  </div>\n);\n\n// Create a root\nconst root = createRoot(rootElement);\n\n// Render your App\nroot.render(<App />);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [968], () => (__webpack_require__(9618)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SliderComponent","setSteps","setGuidance","samplingValue","setSamplingValue","React","guidanceValue","setGuidanceValue","_jsxs","View","style","styles","container","children","_jsx","Text","captionText","Slider","slider","minimumValue","maximumValue","step","value","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","x","sliderValue","parseFloat","toFixed","colors","StyleSheet","create","alignItems","paddingTop","width","height","color","fontSize","textAlign","letterSpacing","fontFamily","paddingBottom","PromptInputComponent","setPlaySound","setPrompt","inferredPrompt","text","setText","useWindowDimensions","textInputStyle","_objectSpread","input","useEffect","flexDirection","TextInput","placeholder","multiline","onChangeText","maxLength","Pressable","pressed","backgroundColor","borderRadius","padding","marginTop","justifyContent","zIndex","onPress","Image","source","require","resizeMode","borderColor","borderBottomLeftRadius","borderWidth","borderBottomRightRadius","borderStartWidth","borderEndWidth","paddingLeft","paddingRight","marginRight","Breathing","animatedValues","useRef","Array","map","Animated","Value","current","animatedValue","index","animation1","timing","toValue","duration","useNativeDriver","animation2","fast","medium","slow","animationSequence","delay","sequence","animationSequences","loop","forEach","animation","start","animatedStyles","interpolate","inputRange","outputRange","extrapolate","interpolateAnimation","containerbreathing","heading","char","flex","marginHorizontal","fontWeight","position","DropDownComponent","passModelID","placeholderModelID","setPlaceholderModelID","useState","Dropdown","dropdown","selectedTextStyle","placeholderStyle","data","label","labelField","valueField","onChange","item","margin","borderBottomColor","borderBottomWidth","addImage","coloredDelete","deleteButton","selectButtonBackground","white","flatListContainer","switchesRowContainer","marginBottom","overflow","imageColumnContainer","columnContainer","selectButton","paddingHorizontal","elevation","promptText","lineHeight","sliderText","imageCard","buttonBackground","shadowColor","shadowOffset","shadowOpacity","shadowRadius","changeButton","MyImagePicker","setReturnedPrompt","promptList","setPromptList","window","imageSource","setImageSource","styleSwitch","setStyleSwitch","settingSwitch","setSettingSwitch","selectedImageIndex","setSelectedImageIndex","_Fragment","Switch","trackColor","false","true","thumbColor","activeThumbColor","ios_backgroundColor","styleSwitchFunction","settingSwitchFunction","FlatList","numColumns","keyExtractor","toString","renderItem","uri","prevImageSource","length","filter","_","i","prevPromptSource","deleteFromImageArray","top","right","async","status","ImagePicker","requestMediaLibraryPermissionsAsync","alert","console","log","result","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","newImageSource","assets","prevPrompt","selectImage","coloredJoin","joinButton","rowContainer","display","button","activityIndicator","marginLeft","Buttons","switchToFlan","setInferrenceButton","activity","longPrompt","setTextInference","switchPromptFunction","promptLengthValue","setParametersWrapper","comboButtonPressed","setComboButtonPressed","ActivityIndicator","size","setThePromptValue","expandButton","expandImage","Expand","isImagePickerVisible","setImagePickerVisible","rightImage","downImage","alignSelf","PromptInference","setFlanPrompt","prompt","textInference","setLongPrompt","setShortPrompt","setInferredPrompt","setActivity","setModelError","alteredPrompt","randomIndex","Math","floor","random","seeds","mistrialPrompt","fetch","method","headers","body","JSON","stringify","modelID","then","response","json","responseData","generatedText","lPrompt","substring","split","slice","replace","catch","error","Inference","inferrenceButton","setModelMessage","parameters","guidance","steps","setInferredImage","encodedImage","setEncodedImage","requestOptions","model","scaledIP","none","key2","up","block_0","down","block_2","image","scale","output","includes","ipScaleHolder","key1","click","swoosh","switchSound","expand","SoundPlayer","makeSound","soundRef","unloadAsync","soundFile","sound","Audio","createAsync","playAsync","loadAndPlaySound","assetImage","circleImage","rotatedCircle","App","useFonts","Sigmar","inferredImage","setModelID","setParameters","modelError","returnedPrompt","shortPrompt","setPromptLengthValue","modelMessage","flanPrompt","soundIncrement","setSoundIncrement","setMakeSound","passModelIDWrapper","prevSoundIncrement","swapImage","prevPromptList","titlecontainer","BreathingComponent","ScrollView","scrollY","showsVerticalScrollIndicator","swapButton","left","leftColumnContainer","rightColumnContainer","imageStyle","swapButtonColumn","StatusBar","bottom","rootElement","document","getElementById","createRoot","render","MainApp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}