{"version":3,"file":"static/js/main.fa5fdf5d.js","mappings":"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","sources":["components/Slider.js","components/PromptInput.js","components/Breathing.js","components/DropDown.js","components/ImagePicker.js","components/Buttons.js","components/Expand.js","components/Prompt.js","components/Inference.js","MainApp.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nexport default function SliderComponent({ setSteps, setGuidance }) {\r\n  const [samplingValue, setSamplingValue] = React.useState(30);\r\n  const [guidanceValue, setGuidanceValue] = React.useState(7);\r\n\r\n  // Handle sampling steps change\r\n  const handleStepChange = (x) => {\r\n    setSamplingValue(x);\r\n    setSteps(x);\r\n  };\r\n\r\n  // Handle guidance change\r\n  const handleGuidanceChange = (x) => {\r\n    setGuidanceValue(parseFloat(x.toFixed(2)));\r\n    setGuidance(parseFloat(x.toFixed(2)));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.captionText}>Sampling Steps</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={3}\r\n        maximumValue={50}\r\n        step={1}\r\n        value={samplingValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleStepChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{samplingValue}</Text>\r\n      <Text style={styles.captionText}>Guidance</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={0}\r\n        maximumValue={10}\r\n        step={0.1}\r\n        value={guidanceValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleGuidanceChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{guidanceValue}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#FFFFFF\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    paddingTop: 50,\r\n  },\r\n  slider: {\r\n    width: 350,\r\n    height: 40,\r\n  },\r\n  captionText: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  sliderValue: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n    paddingBottom: 30,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { Pressable, StyleSheet, TextInput, useWindowDimensions, Image, View} from \"react-native\";\r\n\r\nexport default function PromptInputComponent({ setPrompt, inferredPrompt }) {\r\n  const [text, setText] = React.useState(\"\");\r\n  const { width } = useWindowDimensions();\r\n\r\n  const textInputStyle = {\r\n    ...styles.input,\r\n    width: width > 500 ? 500 : width - 80,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(inferredPrompt){\r\n    setText(inferredPrompt);\r\n    setPrompt(inferredPrompt);\r\n  }\r\n  }, [inferredPrompt]);\r\n\r\n  const handleTextChange = (x) => {\r\n    setText(x);\r\n    setPrompt(x);\r\n  };\r\n\r\n  return (\r\n   \r\n    <View style={{flexDirection: 'row', alignItems: 'flex-end'}}>\r\n    \r\n    <TextInput\r\n      style={textInputStyle}\r\n      placeholder=\"\"\r\n      multiline\r\n      textAlign=\"center\"\r\n      onChangeText={handleTextChange}\r\n      value={text}\r\n      maxLength={20000}\r\n    />\r\n    <Pressable\r\n      style={({ pressed }) => [\r\n        { \r\n          height: pressed ? 25 : 30,\r\n          width: pressed ? 25 : 30,\r\n          backgroundColor: pressed ? \"#B58392\":\"#3a3c3f\" ,\r\n          borderRadius: 6,\r\n          padding: 10,\r\n          marginTop: 10,\r\n          alignItems: 'center', \r\n          justifyContent: 'center', \r\n        },\r\n      ]}\r\n      onPress={() => {\r\n        setText(\"\");\r\n        setPrompt(\"\");\r\n      }}>\r\n        <Image \r\n          source={require('../assets/close.png')} \r\n          style={{\r\n            width: '100%', \r\n            height: '100%', \r\n            resizeMode: 'contain', \r\n          }} \r\n        />\r\n    </Pressable>\r\n   </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  borderColor: \"#B58392\",\r\n  color: \"#000000\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    backgroundColor: colors.backgroundColor,\r\n    borderColor: colors.borderColor,\r\n    borderBottomLeftRadius: 4,\r\n    borderWidth: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderStartWidth: 10,\r\n    borderEndWidth: 10,\r\n    borderRadius: 6,\r\n    height: 200,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    fontSize: 20,\r\n    color: colors.color,\r\n    fontFamily: \"Sigmar\",\r\n    marginRight: 10,\r\n  },\r\n});\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nexport default function Breathing() {\r\n  // Create an array of Animated values using useRef\r\n  const animatedValues = useRef(\r\n    [...Array(12)].map(() => new Animated.Value(0))\r\n  ).current;\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    // Define animations for each value in animatedValues\r\n    const animations = animatedValues.map((animatedValue, index) => {\r\n      // Animation for increasing value\r\n      const animation1 = Animated.timing(animatedValue, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      // Animation for decreasing value\r\n      const animation2 = Animated.timing(animatedValue, {\r\n        toValue: 0,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      const fast = 300;\r\n      const medium = 450;\r\n      const slow = 600;\r\n      // Define delays for each animation\r\n      const delays = [\r\n        index * fast,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        index * slow,\r\n        (11 - index) * medium,\r\n        index * fast,\r\n        (11 - index) * slow,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        (11 - index) * medium,\r\n        index * slow,\r\n        (11 - index) * slow,\r\n      ];\r\n\r\n      // Create a sequence of animations with delays\r\n      const animationSequence = delays.map((delay, index) => {\r\n        return Animated.sequence([\r\n          Animated.delay(delay),\r\n          animation1,\r\n          animation2,\r\n        ]);\r\n      });\r\n\r\n      // Create a sequence of all animation sequences\r\n      const animationSequences = Animated.sequence(animationSequence);\r\n\r\n      // Create a loop for the animation sequence\r\n      return Animated.loop(animationSequences);\r\n    });\r\n\r\n    // Start all animations\r\n    animations.forEach((animation) => {\r\n      animation.start();\r\n    });\r\n  }, [animatedValues]);\r\n\r\n  // Interpolate animations to map values to desired output range\r\n  const interpolateAnimations = animatedValues.map((animatedValue) =>\r\n    animatedValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: width > 1000 ? [60, 90] : [20, 30],\r\n      extrapolate: \"clamp\",\r\n    })\r\n  );\r\n\r\n  // Create animated styles based on interpolated values\r\n  const animatedStyles = interpolateAnimations.map((interpolateAnimation) => ({\r\n    fontSize: interpolateAnimation,\r\n  }));\r\n\r\n  return (\r\n    <View style={styles.containerbreathing}>\r\n      <Text style={styles.heading}>\r\n        <Animated.Text style={[styles.char, animatedStyles[0]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[1]]}>\r\n          I\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[2]]}>\r\n          X\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[3]]}>\r\n          E\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[4]]}>\r\n          L\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[5]]}>\r\n          {\" \"}\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[6]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[7]]}>\r\n          R\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[8]]}>\r\n          O\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[9]]}>\r\n          M\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[10]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[11]]}>\r\n          T\r\n        </Animated.Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#6750A4\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerbreathing: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  char: {\r\n    marginHorizontal: 15,\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Sigmar\",\r\n    color: colors.color,\r\n    paddingTop: 25,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n","import { StyleSheet } from \"react-native\";\r\nimport { Dropdown } from \"react-native-element-dropdown\";\r\n\r\nconst data = [\r\n  { label: \"Step Aware\", value: \"SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep\" },\r\n  {\r\n    label: \"Stable Diffusion\",\r\n    value: \"stabilityai/stable-diffusion-xl-base-1.0\",\r\n  },\r\n  { label: \"Voxel\", value: \"Fictiverse/Voxel_XL_Lora\" },\r\n  { label: \"Paper Cut Out\", value: \"Fictiverse/Stable_Diffusion_PaperCut_Model\" },\r\n  { label: \"Van-Gogh\", value: \"dallinmackay/Van-Gogh-diffusion\" },\r\n  { label: \"Robots\", value: \"nousr/robo-diffusion\" },\r\n  { label: \"Anime\", value: \"Eugeoter/artiwaifu-diffusion-1.0\" },\r\n  { label: \"Arcane\", value: \"nitrosocke/Arcane-Diffusion\" },\r\n  { label: \"Balloon Art\", value: \"Fictiverse/Stable_Diffusion_BalloonArt_Model\" },\r\n  { label: \"Open Journey\", value: \"prompthero/openjourney\" },\r\n  { label: \"Flintstones\", value: \"juliajoanna/sdxl-flintstones_finetuning_1\" },\r\n  { label: \"SegMind\", value: \"segmind/Segmind-Vega\" },\r\n  { label: \"Mickey 1928\", value: \"Pclanglais/Mickey-1928\" },\r\n  { label: \"Maps\", value: \"firella/202404032300-oldvis-choropleth-lora-sdxl\" },\r\n  { label: \"Russian Vibe\", value: \"0x7o/RussianVibe-XL-v2.0\" },\r\n  { label: \"Photo\", value: \"dreamlike-art/dreamlike-photoreal-2.0\" }\r\n];\r\n\r\nexport default function DropDownComponent({ passModelID }) {\r\n  return (\r\n    <Dropdown\r\n      style={styles.dropdown}\r\n      selectedTextStyle={styles.selectedTextStyle}\r\n      placeholderStyle={styles.placeholderStyle}\r\n      data={data}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      placeholder=\"Model ID\"\r\n      onChange={(item) => {\r\n        passModelID(item.value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  borderBottomColor: \"#9DA58D\",\r\n  color: \"#FFFFFF\",\r\n};\r\nconst styles = StyleSheet.create({\r\n  dropdown: {\r\n    margin: 16,\r\n    height: 50,\r\n    width: 300,\r\n    borderBottomColor: colors.borderBottomColor,\r\n    borderBottomWidth: 3,\r\n  },\r\n  placeholderStyle: {\r\n    color: colors.color,\r\n    fontSize: 25,\r\n    fontFamily: \"Sigmar\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n  },\r\n  selectedTextStyle: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    fontFamily: \"Sigmar\",\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\nimport { Pressable, Image, View, StyleSheet, Text, Switch } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst MyImagePicker = ({\n  imageSource,\n  setImageSource,\n  styleSwitch,\n  setStyleSwitch,\n  settingSwitch,\n  setSettingSwitch,\n}) => {\n  const selectImage = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      alert(\"Sorry, we need media library permissions to select an image.\");\n      return;\n    }\n    console.log(\"Selecting image\")\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    \n    if (!result.cancelled) {\n      setImageSource(result.assets[0].uri);\n    }\n  };\n\n  const styleSwitchFunction = () => {\n    setStyleSwitch(!styleSwitch);\n  };\n\n  const settingSwitchFunction = () => {\n    setSettingSwitch(!settingSwitch);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.rowContainer}>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: styleSwitch ? \"#9DA58D\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Style\n          </Text>\n          <Switch\n            trackColor={{ false: \"#9DA58D\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={styleSwitchFunction}\n            value={styleSwitch}\n          />\n        </View>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: settingSwitch ? \"#9FA8DA\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Layout\n          </Text>\n          <Switch\n            trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={settingSwitchFunction}\n            value={settingSwitch}\n          />\n        </View>\n      </View>\n\n      {imageSource &&\n        <Image source={typeof imageSource === 'number' ? imageSource : { uri: imageSource }} style={styles.image} />\n        }\n      <Pressable style={styles.selectButton} onPress={selectImage}>\n        <Text style={styles.promptText}>Select</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  selectButtonBackground: \"#3a3c3f\",\n  white: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: 20,\n  },\n  rowContainer: {\n    backgroundColor: colors.backgroundColor,\n    alignItems: \"center\",\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"row\",\n    overflow: \"auto\",\n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  selectButton: {\n    margin: 20,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n    backgroundColor: colors.selectButtonBackground,\n  },\n  promptText: {\n    color: colors.white,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n});\n\nexport default MyImagePicker;\n","// Buttons.js\nimport React from 'react';\nimport { StyleSheet, View, Text, Pressable, ActivityIndicator, Switch } from 'react-native';\n\nconst Buttons = ({ activity, longPrompt, setTextInference, switchPromptFunction, promptLengthValue, setParametersWrapper}) => {\n  return (\n    <>\n                  {activity ? (\n                    <ActivityIndicator\n                      size=\"large\"\n                      color=\"#B58392\"\n                      style={{ margin: 25 }}\n                    />\n                  ) : (\n                    <>{longPrompt ? \n                    <><View style={[styles.rowContainer, {padding:0}]}>\n                    <Pressable\n                        onPress={() => {\n                          setTextInference(true);\n                        }}\n                        style={({ pressed }) => [\n                          { backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\" ,\n                           width: 40, height: 40, borderRadius: 20, margin:10}]}\n                      >\n                      </Pressable>\n                      <View style={styles.columnContainer}>\n                      <View style={[styles.rowContainer, {padding:0}]}>\n                      <Text\n                        style={[\n                          { color: promptLengthValue ? \"#FFFFFF\" : \"#9FA8DA\", marginRight: 15},\n                          styles.sliderText,\n                        ]}\n                      >\n                        Short\n                      </Text>\n                      <Text\n                        style={[\n                          { color: promptLengthValue ? \"#9FA8DA\" : \"#FFFFFF\", marginRight: 15},\n                          styles.sliderText,\n                        ]}\n                      >\n                        Long\n                      </Text>\n                      </View>\n                      <Switch\n                        trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n                        thumbColor=\"#B58392\"\n                        activeThumbColor=\"#6750A4\"\n                        ios_backgroundColor=\"#3e3e3e\"\n                        onValueChange={switchPromptFunction}\n                        value={promptLengthValue}\n                      />\n                    </View>\n                    </View>\n                    </> : \n                      <Pressable\n                        onPress={() => {\n                          setTextInference(true);\n                        }}\n                        style={({ pressed }) => [\n                          { backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\"},\n                          styles.button,\n                        ]}\n                      >\n                        {({ pressed }) => (\n                          <Text style={styles.promptText}>\n                            {pressed ? \"PROMPTED!\" : \"Prompt\"}\n                          </Text>\n                        )}\n                      </Pressable>}\n                      <Pressable\n                        onPress={() => {\n                          setParametersWrapper();\n                        }}\n                        style={({ pressed }) => [\n                          { backgroundColor: pressed ? \"#9DA58D\" : \"#958DA5\", marginBottom:20 },\n                          styles.button,\n                        ]}\n                      >\n                        {({ pressed }) => (\n                          <Text style={styles.promptText}>\n                            {pressed ? \"INFERRED!\" : \"Inference\"}\n                          </Text>\n                        )}\n                      </Pressable>\n                    </>\n                  )}</>\n  );\n};\n\nconst colors = {\n    backgroundColor: \"#25292e\",\n    color: \"#FFFFFF\",\n  };\n  \n  const styles = StyleSheet.create({\n    rowContainer: {\n      backgroundColor: colors.backgroundColor,\n      display: \"flex\",\n      flexDirection: \"row\",\n      marginTop: 10,\n      overflow: \"visible\",\n      padding: 20,\n    },\n    columnContainer: {\n      flex: 1,\n      alignItems: \"center\",\n      flexDirection: \"column\",\n    },\n    button: {\n      margin: 10,\n      borderRadius: 4,\n      paddingHorizontal: 32,\n      elevation: 3,\n      fontFamily: \"Sigmar\",\n    },\n    activityIndicator: {\n      marginLeft: 50,\n    },\n    promptText: {\n      color: colors.color,\n      fontSize: 18,\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      letterSpacing: 2,\n      lineHeight: 30,\n      fontFamily: \"Sigmar\",\n    },\n    sliderText: {\n      fontSize: 18,\n      fontWeight: \"bold\",\n      textAlign: \"center\",\n      letterSpacing: 2,\n      lineHeight: 30,\n      fontFamily: \"Sigmar\",\n    },\n  });\n\n\nexport default Buttons;","import React from 'react';\nimport {StyleSheet, Pressable, Image } from 'react-native'; \nimport { Dimensions } from 'react-native';\n\nconst Expand = ({isImagePickerVisible, setImagePickerVisible, window}) => {\n  return (\n    \n      <Pressable\n      style={[\n        styles.expandButton,\n        {\n          alignSelf: 'flex-start',\n          marginLeft: window.width < 1000 ? '20%' : '0',\n          marginBottom: 0,\n        },\n      ]}\n        onPress={() => setImagePickerVisible(!isImagePickerVisible)}\n      >\n        {isImagePickerVisible ? (\n          <Image\n            source={require(\"../assets/right.png\")}\n            style={styles.expandImage}\n          />\n        ) : (\n          <Image\n            source={require(\"../assets/down.png\")}\n            style={styles.expandImage}\n          />\n        )}\n      </Pressable>\n      \n  );\n};\n\nconst colors = {\n    buttonBackground: \"#3a3c3f\",\n  };\n  \n  const styles = StyleSheet.create({\n    expandButton: {\n      width: 30, // adjust size as needed\n      height: 30, // adjust size as needed\n      borderRadius: 15, // half of size to make it circular\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: colors.buttonBackground, // change as needed\n      elevation: 3, // for Android shadow\n      shadowColor: \"#000\", // for iOS shadow\n      shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n      shadowOpacity: 0.25, // for iOS shadow\n      shadowRadius: 3.84, // for iOS shadow\n    },\n    expandImage: {\n      width: 20,\n      height: 20,\n    }\n  });\n\nexport default Expand;","import { useEffect } from 'react';\nimport seeds from \"../assets/seeds.json\"; \n\nconst PromptInference = ({ prompt, textInference, setTextInference, setLongPrompt, setShortPrompt, setInferredPrompt, promptLengthValue, setActivity, setModelError }) => {\n \nuseEffect(() => { \n    if(textInference){\n      setActivity(true);\n      setModelError(false);\n      let alteredPrompt = '';     \n      if(prompt === 'Avocado Armchair' || prompt === ''){\n        const randomIndex = Math.floor(Math.random() * seeds.seeds.length);\n        alteredPrompt = seeds.seeds[randomIndex];\n      }else {\n        alteredPrompt = prompt;\n      }\n      alteredPrompt = `I'm giving you a seed string for a stable diffusion model. Return two versions \\\n        in fewer than 500 tokens. A long version and a shortened version.  Make both descriptive and creative. \\\n        Here is the seed string. : ${alteredPrompt}`;\n      \n      fetch('/inferencePrompt', {             // Change this to your API endpoint and use a library  \n        method: 'POST',                         // Axios if not running in the same container\n        headers: {                               // http://localhost:8085/inferencePrompt if running locally or w/e port your server is using or \n          'Content-Type': 'application/json',     // /inferencePrompt if running in a container\n        },\n        body: JSON.stringify({\n          prompt: alteredPrompt,\n          modelID: 'mistralai/Mistral-7B-Instruct-v0.3'\n        })\n      })\n      .then(response => response.json())\n      .then((responseData) => {\n        \n        const generatedText = responseData[0][\"generated_text\"];\n        const splitPrompt = generatedText.split(/Short(?:ened)? (?:Version:)?/i);\n        const longPromptHolder = splitPrompt[0].substring(0,150).split(/\\n\\n/).slice(-1)[0].replace(\"Long Version:\", \"\").replace(\"\\n\",\"\");\n        const lPrompt =  longPromptHolder + splitPrompt[0].substring(150)\n        const holderShortPrompt = splitPrompt[1].substring(0,150).split(/\\n\\n/).slice(-1)[0].replace(\"\\n\",\"\");\n        const sPrompt = holderShortPrompt + splitPrompt[1].substring(150).split(/\\n\\n/)[0];\n        \n        \n        setLongPrompt(lPrompt);\n        setShortPrompt(sPrompt);\n        if(!promptLengthValue) {\n          setInferredPrompt(sPrompt);\n        }else {\n          setInferredPrompt(lPrompt);\n        }\n        setActivity(false);\n      })\n      .catch(error => console.error('Error:', error));\n      }\n  setTextInference(false);\n  },[textInference]);\n};\n\nexport default PromptInference;","import { useEffect } from 'react';\n\nconst Inference = ({ parameters, modelID, prompt, isImagePickerVisible, styleSwitch, settingSwitch, guidance, steps, setActivity, setModelError, setReturnedPrompt, setInferredImage, setEncodedImage, encodedImage}) => {\n  \n\nconst getBase64Image = () => { \n    console.log(imageSource)\n    fetch(imageSource)\n    .then(response => response.blob())\n    .then(blob => {\n      console.log(blob.type);\n      const reader = new FileReader();\n      reader.readAsDataURL(blob); // blob is your file object\n      reader.onloadend = function() {\n        let base64data = reader.result;               \n        setEncodedImage(base64data);\n      }\n    })\n    .catch(error => console.error(error));\n  }\n\n  // useEffect hook for img2img\n  useEffect(() =>{\n    if(encodedImage){\n      const modelIDHard = \"stabilityai/stable-diffusion-xl-refiner-1.0\"\n    let scaledIP = {\"key1\": {\"key2\": [0.0, 0.0]}}\n    if (styleSwitch) {\n      scaledIP = {\n        up: { block_0: [0.0, 1.0, 0.0] },\n      };\n    }\n    if (settingSwitch) {\n      scaledIP = {\n        down: { block_2: [0.0, 1.0] },\n        up: { block_0: [0.0, 1.0, 0.0] },\n      };\n    }\n    fetch('/api', {              // Change this to your API endpoint and use a library  \n      method: 'POST',                               // Axios if not running in the same container\n        headers: {                                  // http://localhost:8085/api if running locally or w/e port your server is using or                    \n          'Content-Type': 'application/json',         // /api if running in a container\n        },\n        body: JSON.stringify({\n          prompt: prompt,\n          steps: steps,\n          guidance: guidance,\n          modelID: modelIDHard,\n          image: encodedImage,              // Holders Until File Upload Optional with FastAPI is fixed\n          scale: scaledIP                 // Holders Until File Upload Optional with FastAPI is fixed\n        })\n    })\n    .then(response => response.json())\n    .then( responseData => {\n        setActivity(false);\n        setReturnedPrompt(prompt);\n        setEncodedImage(null);\n        setInferredImage('data:image/png;base64,' + responseData.output);\n      })\n      .catch(function (error) {\n      setActivity(false);\n      setModelError(true);\n      console.log(error);\n    });\n  }\n},[encodedImage])\n  \n\n// useEffect hook for txt2img\n  useEffect(() => {\n    if (parameters ){\n      console.log(parameters)\n      setActivity(true);\n      if (false) { // isImagePickerVisible  Check for timeline on IP Adapater inference API\n        getBase64Image();\n      }else{\n      const ipScaleHolder = {\"key1\": {\"key2\": [0.0, 0.0]}}\n      fetch('/api', {             // Change this to your API endpoint and use a library  \n      method: 'POST',                                  // Axios if not running in the same container\n        headers: {                                   // http://localhost:8085/api if running locally or w/e port your server is using or\n          'Content-Type': 'application/json',           // /api if running in a container\n        },\n        body: JSON.stringify({\n          prompt: prompt,\n          steps: steps,\n          guidance: guidance,\n          modelID: modelID,\n          image: 'test',            // Holders Until File Upload Optional with FastAPI is fixed\n          scale: 'test'          // Holders Until File Upload Optional with FastAPI is fixed\n        })\n    })\n    .then(response => response.json())\n    .then( responseData => {\n        setActivity(false);\n        setReturnedPrompt(prompt);\n        setInferredImage('data:image/png;base64,' + responseData.output);\n      })\n      .catch(function (error) {\n      setActivity(false);\n      setModelError(true);\n      console.log(error);\n    });\n  }}\n  },[parameters]);\n\n};\n\nexport default Inference;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Image,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\nimport SliderComponent from \"./components/Slider\";\r\nimport PromptInputComponent from \"./components/PromptInput\";\r\nimport BreathingComponent from \"./components/Breathing\";\r\nimport DropDownComponent from \"./components/DropDown\";\r\nimport MyImagePicker from \"./components/ImagePicker\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport Expand from \"./components/Expand\";\r\nimport PromptInference from \"./components/Prompt\";\r\nimport Inference from \"./components/Inference\"\r\n\r\nconst assetImage = require(\"./assets/avocado.jpg\");\r\n\r\n\r\nexport default function App() {\r\n  useFonts({ Sigmar: require(\"./assets/Sigmar/Sigmar-Regular.ttf\") });\r\n  const [inferredImage, setInferredImage] = useState(assetImage);\r\n  const [steps, setSteps] = useState(30);\r\n  const [guidance, setGuidance] = useState(7);\r\n  const [modelID, setModelID] = useState(\r\n    \"SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep\"\r\n  );\r\n  const [prompt, setPrompt] = useState(\"Avocado Armchair\");\r\n  const [inferredPrompt, setInferredPrompt] = useState(null);\r\n  const [parameters, setParameters] = useState(null);\r\n  const [activity, setActivity] = useState(false);\r\n  const [modelError, setModelError] = useState(false);\r\n  const [returnedPrompt, setReturnedPrompt] = useState(\"Avocado Armchair\");\r\n  const [textInference, setTextInference] = useState(false);\r\n  const [encodedImage, setEncodedImage] = useState('')\r\n  const [shortPrompt, setShortPrompt] = useState(\"\");\r\n  const [longPrompt, setLongPrompt] = useState(null);\r\n  const [promptLengthValue, setPromptLengthValue] = useState(false);\r\n  const window = useWindowDimensions();\r\n\r\n  const [isImagePickerVisible, setImagePickerVisible] = useState(false);\r\n  const [imageSource, setImageSource] = useState();\r\n  const [settingSwitch, setSettingSwitch] = useState(false);\r\n  const [styleSwitch, setStyleSwitch] = useState(false);\r\n\r\n  const passModelIDWrapper = (x) => {\r\n    setModelError(false);\r\n    setModelID(x);\r\n  };\r\n\r\n  const swapImage = () => {\r\n    setInferredImage(imageSource);\r\n    setImageSource(inferredImage);\r\n  };\r\n\r\n  const switchPromptFunction = () => {\r\n    setPromptLengthValue(!promptLengthValue);\r\n    if(promptLengthValue) {\r\n      setInferredPrompt(shortPrompt);\r\n    } else {\r\n      setInferredPrompt(longPrompt);\r\n    }\r\n  };\r\n \r\n  const setParametersWrapper = () => {\r\n    setParameters(`${prompt}-${steps}-${guidance}-${modelID}`);\r\n  };\r\n\r\n  return (\r\n    // Main container\r\n    <View style={styles.titlecontainer}>\r\n      <PromptInference prompt={prompt} textInference={textInference} setTextInference={setTextInference} setLongPrompt={setLongPrompt} setShortPrompt={setShortPrompt} setInferredPrompt={setInferredPrompt} promptLengthValue={promptLengthValue} setActivity={setActivity} setModelError={setModelError} setEncodedImage={setEncodedImage} encodedImage={encodedImage}/>\r\n      <Inference parameters={parameters} modelID={modelID} prompt={prompt} isImagePickerVisible={isImagePickerVisible} styleSwitch={styleSwitch} settingSwitch={settingSwitch} guidance={guidance} steps={steps} setActivity={setActivity} setModelError={setModelError} setReturnedPrompt={setReturnedPrompt} setInferredImage={setInferredImage}/>\r\n      <BreathingComponent />\r\n      <ScrollView\r\n        scrollY={true}\r\n        style={styles.ScrollView}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        {window.width > 1000 ? (\r\n          \r\n          <View style={styles.rowContainer}>\r\n            {/* Left column */}\r\n            {isImagePickerVisible && (\r\n              <Pressable\r\n                onPress={() => {\r\n                  swapImage();\r\n                }}\r\n                style={[styles.swapButton, {\r\n                  top: window.height / 2 - 15,\r\n                  left: window.width / 2 - 15,\r\n                }]\r\n                }\r\n                \r\n              >\r\n                <Image\r\n                  source={require(\"./assets/circle.png\")}\r\n                  style={styles.changeButton}\r\n                />\r\n              </Pressable>\r\n            )}\r\n\r\n            <View style={styles.leftColumnContainer}>\r\n              <View>\r\n                <PromptInputComponent\r\n                  setPrompt={setPrompt}\r\n                  inferredPrompt={inferredPrompt}\r\n                />\r\n              </View>\r\n              <View style={[styles.rowContainer, \r\n                          { padding:0 }]}>\r\n                <DropDownComponent passModelID={passModelIDWrapper} />\r\n                <View style={styles.columnContainer}>\r\n                <Buttons activity={activity} longPrompt={longPrompt} setTextInference={setTextInference} switchPromptFunction={switchPromptFunction} promptLengthValue={promptLengthValue} setParametersWrapper={setParametersWrapper}/>\r\n                  {modelError ? (\r\n                    <Text style={styles.promptText}>Model Error!</Text>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </View>\r\n              </View>\r\n              \r\n              <View>\r\n                <Expand isImagePickerVisible={isImagePickerVisible} setImagePickerVisible={setImagePickerVisible} window={window}/>\r\n                {isImagePickerVisible && (\r\n                  <MyImagePicker\r\n                    imageSource={imageSource}\r\n                    setImageSource={setImageSource}\r\n                    styleSwitch={styleSwitch}\r\n                    setStyleSwitch={setStyleSwitch}\r\n                    settingSwitch={settingSwitch}\r\n                    setSettingSwitch={setSettingSwitch}\r\n                  />\r\n                )}\r\n                <SliderComponent\r\n                  setSteps={setSteps}\r\n                  setGuidance={setGuidance}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={styles.rightColumnContainer}>\r\n              {inferredImage && (\r\n                <Image source={typeof inferredImage === 'number' ? inferredImage : { uri: inferredImage }} style={styles.imageStyle} />\r\n              )}\r\n              <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n            </View>\r\n          </View>\r\n        ) \r\n        : (\r\n          <View style={styles.columnContainer}>\r\n            <PromptInputComponent\r\n              setPrompt={setPrompt}\r\n              inferredPrompt={inferredPrompt}\r\n            />\r\n            <DropDownComponent passModelID={passModelIDWrapper} />\r\n            <Buttons activity={activity} longPrompt={longPrompt} setTextInference={setTextInference} switchPromptFunction={switchPromptFunction} promptLengthValue={promptLengthValue} setParametersWrapper={setParametersWrapper}/>   \r\n            {modelError ? (\r\n              <Text style={styles.promptText}>Model Error!</Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Expand isImagePickerVisible={isImagePickerVisible} setImagePickerVisible={setImagePickerVisible} window={window}/>\r\n            {isImagePickerVisible && (\r\n              <>\r\n                <MyImagePicker\r\n                  imageSource={imageSource}\r\n                  setImageSource={setImageSource}\r\n                  styleSwitch={styleSwitch}\r\n                  setStyleSwitch={setStyleSwitch}\r\n                  settingSwitch={settingSwitch}\r\n                  setSettingSwitch={setSettingSwitch}\r\n                />\r\n                <Pressable \r\n                  onPress={() => {\r\n                    swapImage();\r\n                  }}\r\n                  style={styles.swapButtonColumn}>\r\n                  <Image\r\n                    source={require(\"./assets/circle.png\")}\r\n                    style={styles.changeButton}\r\n                  />\r\n                </Pressable>\r\n              </>\r\n            )}\r\n            <SliderComponent setSteps={setSteps} setGuidance={setGuidance} />\r\n            {inferredImage && (\r\n              <Image source={typeof inferredImage === 'number' ? inferredImage : { uri: inferredImage }} style={styles.imageStyle} />\r\n            )}\r\n            <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#25292e\",\r\n  buttonBackground: \"#3a3c3f\",\r\n  color: \"#FFFFFF\",\r\n  button: \"#958DA5\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titlecontainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    padding: 20,\r\n  },\r\n  rowContainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    overflow: \"visible\",\r\n    padding: 20,\r\n  },\r\n  leftColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\", // Center items horizontally\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    marginRight: 10,\r\n  },\r\n  rightColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 10,\r\n  },\r\n  columnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  button: {\r\n    margin: 10,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 32,\r\n    elevation: 3,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  swapButton: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    position: \"absolute\",\r\n    left: window.width / 2 - 15,\r\n    top: window.height / 2 - 15,\r\n    zIndex: 1,\r\n    elevation: 3,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  changeButton: {\r\n    width: 60,\r\n    height: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\", // change as needed\r\n    elevation: 3, // for Android shadow\r\n    shadowColor: \"#000\", // for iOS shadow\r\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\r\n    shadowOpacity: 0.25, // for iOS shadow\r\n    shadowRadius: 3.84, // for iOS shadow\r\n  },\r\n  swapButtonColumn: {\r\n    width: 60, // adjust size as needed\r\n    height: 60, // adjust size as needed\r\n    borderRadius: 30,\r\n    elevation: 3,\r\n    margin: 20,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  promptText: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 2,\r\n    lineHeight: 30,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  ScrollView: {\r\n    backgroundColor: colors.backgroundColor,\r\n    marginTop: 50,\r\n    padding: 5,\r\n  },\r\n  imageStyle: {\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n  }\r\n  \r\n});\r\n\r\n\r\n","import { createRoot } from 'react-dom/client';\nimport MainApp from './MainApp';\n\n// Assuming your root element is 'root'\nconst rootElement = document.getElementById('root');\n\n// Your App component\nconst App = () => (\n  <div>\n    <MainApp/>\n  </div>\n);\n\n// Create a root\nconst root = createRoot(rootElement);\n\n// Render your App\nroot.render(<App />);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [133], () => (__webpack_require__(470)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SliderComponent","setSteps","setGuidance","samplingValue","setSamplingValue","React","guidanceValue","setGuidanceValue","_jsxs","View","style","styles","container","children","_jsx","Text","captionText","Slider","slider","minimumValue","maximumValue","step","value","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","x","sliderValue","parseFloat","toFixed","colors","StyleSheet","create","alignItems","paddingTop","width","height","color","fontSize","textAlign","letterSpacing","fontFamily","paddingBottom","PromptInputComponent","setPrompt","inferredPrompt","text","setText","useWindowDimensions","textInputStyle","_objectSpread","input","useEffect","flexDirection","TextInput","placeholder","multiline","onChangeText","maxLength","Pressable","pressed","backgroundColor","borderRadius","padding","marginTop","justifyContent","onPress","Image","source","require","resizeMode","borderColor","borderBottomLeftRadius","borderWidth","borderBottomRightRadius","borderStartWidth","borderEndWidth","paddingLeft","paddingRight","marginRight","Breathing","animatedValues","useRef","Array","map","Animated","Value","current","animatedValue","index","animation1","timing","toValue","duration","useNativeDriver","animation2","fast","medium","slow","animationSequence","delay","sequence","animationSequences","loop","forEach","animation","start","animatedStyles","interpolate","inputRange","outputRange","extrapolate","interpolateAnimation","containerbreathing","heading","char","flex","marginHorizontal","fontWeight","position","data","label","DropDownComponent","passModelID","Dropdown","dropdown","selectedTextStyle","placeholderStyle","labelField","valueField","onChange","item","margin","borderBottomColor","borderBottomWidth","image","rowContainer","overflow","columnContainer","selectButton","paddingHorizontal","elevation","promptText","lineHeight","sliderText","MyImagePicker","imageSource","setImageSource","styleSwitch","setStyleSwitch","settingSwitch","setSettingSwitch","Switch","trackColor","false","true","thumbColor","activeThumbColor","ios_backgroundColor","styleSwitchFunction","settingSwitchFunction","uri","async","status","ImagePicker","requestMediaLibraryPermissionsAsync","alert","console","log","result","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","assets","display","button","activityIndicator","marginLeft","Buttons","activity","longPrompt","setTextInference","switchPromptFunction","promptLengthValue","setParametersWrapper","_Fragment","ActivityIndicator","size","marginBottom","expandButton","shadowColor","shadowOffset","shadowOpacity","shadowRadius","expandImage","Expand","isImagePickerVisible","setImagePickerVisible","window","alignSelf","PromptInference","prompt","textInference","setLongPrompt","setShortPrompt","setInferredPrompt","setActivity","setModelError","alteredPrompt","randomIndex","Math","floor","random","seeds","length","fetch","method","headers","body","JSON","stringify","modelID","then","response","json","responseData","splitPrompt","split","lPrompt","substring","slice","replace","sPrompt","catch","error","Inference","parameters","guidance","steps","setReturnedPrompt","setInferredImage","setEncodedImage","encodedImage","modelIDHard","scaledIP","up","block_0","down","block_2","scale","output","assetImage","App","useFonts","Sigmar","inferredImage","useState","setModelID","setParameters","modelError","returnedPrompt","shortPrompt","setPromptLengthValue","passModelIDWrapper","swapImage","titlecontainer","BreathingComponent","ScrollView","scrollY","showsVerticalScrollIndicator","swapButton","top","left","changeButton","leftColumnContainer","rightColumnContainer","imageStyle","swapButtonColumn","StatusBar","right","bottom","zIndex","rootElement","document","getElementById","createRoot","render","MainApp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}