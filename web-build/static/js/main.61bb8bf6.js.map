{"version":3,"file":"static/js/main.61bb8bf6.js","mappings":"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","sources":["components/Slider.js","components/PromptInput.js","components/Breathing.js","components/DropDown.js","components/ImagePicker.js","components/Buttons.js","components/Expand.js","components/Prompt.js","components/Inference.js","MainApp.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nexport default function SliderComponent({ setSteps, setGuidance }) {\r\n  const [samplingValue, setSamplingValue] = React.useState(30);\r\n  const [guidanceValue, setGuidanceValue] = React.useState(7);\r\n\r\n  // Handle sampling steps change\r\n  const handleStepChange = (x) => {\r\n    setSamplingValue(x);\r\n    setSteps(x);\r\n  };\r\n\r\n  // Handle guidance change\r\n  const handleGuidanceChange = (x) => {\r\n    setGuidanceValue(parseFloat(x.toFixed(2)));\r\n    setGuidance(parseFloat(x.toFixed(2)));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.captionText}>Sampling Steps</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={3}\r\n        maximumValue={50}\r\n        step={1}\r\n        value={samplingValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleStepChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{samplingValue}</Text>\r\n      <Text style={styles.captionText}>Guidance</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={0}\r\n        maximumValue={10}\r\n        step={0.1}\r\n        value={guidanceValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleGuidanceChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{guidanceValue}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#FFFFFF\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    paddingTop: 50,\r\n  },\r\n  slider: {\r\n    width: 350,\r\n    height: 40,\r\n  },\r\n  captionText: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  sliderValue: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n    paddingBottom: 30,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Pressable,\r\n  StyleSheet,\r\n  TextInput,\r\n  useWindowDimensions,\r\n  Image,\r\n  View,\r\n} from \"react-native\";\r\n\r\nexport default function PromptInputComponent({ setPrompt, inferredPrompt }) {\r\n  const [text, setText] = React.useState(\"\");\r\n  const { width } = useWindowDimensions();\r\n\r\n  const textInputStyle = {\r\n    ...styles.input,\r\n    width: width > 500 ? 500 : width - 80,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inferredPrompt) {\r\n      setText(inferredPrompt);\r\n      setPrompt(inferredPrompt);\r\n    }\r\n  }, [inferredPrompt]);\r\n\r\n  const handleTextChange = (x) => {\r\n    setText(x);\r\n    setPrompt(x);\r\n  };\r\n\r\n  return (\r\n    <View style={{ flexDirection: \"row\", alignItems: \"flex-end\" }}>\r\n      <TextInput\r\n        style={textInputStyle}\r\n        placeholder=\"\"\r\n        multiline\r\n        textAlign=\"center\"\r\n        onChangeText={handleTextChange}\r\n        value={text}\r\n        maxLength={20000}\r\n      />\r\n      <Pressable\r\n        style={({ pressed }) => [\r\n          {\r\n            height: pressed ? 25 : 30,\r\n            width: pressed ? 25 : 30,\r\n            backgroundColor: pressed ? \"#B58392\" : \"#3a3c3f\",\r\n            borderRadius: 6,\r\n            padding: 10,\r\n            marginTop: 10,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          },\r\n        ]}\r\n        onPress={() => {\r\n          setText(\"\");\r\n          setPrompt(\"\");\r\n        }}\r\n      >\r\n        <Image\r\n          source={require(\"../assets/close.png\")}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            resizeMode: \"contain\",\r\n          }}\r\n        />\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  borderColor: \"#B58392\",\r\n  color: \"#000000\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    backgroundColor: colors.backgroundColor,\r\n    borderColor: colors.borderColor,\r\n    borderBottomLeftRadius: 4,\r\n    borderWidth: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderStartWidth: 10,\r\n    borderEndWidth: 10,\r\n    borderRadius: 6,\r\n    height: 200,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    fontSize: 20,\r\n    color: colors.color,\r\n    fontFamily: \"Sigmar\",\r\n    marginRight: 10,\r\n  },\r\n});\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nexport default function Breathing() {\r\n  // Create an array of Animated values using useRef\r\n  const animatedValues = useRef(\r\n    [...Array(12)].map(() => new Animated.Value(0))\r\n  ).current;\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    // Define animations for each value in animatedValues\r\n    const animations = animatedValues.map((animatedValue, index) => {\r\n      // Animation for increasing value\r\n      const animation1 = Animated.timing(animatedValue, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      // Animation for decreasing value\r\n      const animation2 = Animated.timing(animatedValue, {\r\n        toValue: 0,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      const fast = 300;\r\n      const medium = 450;\r\n      const slow = 600;\r\n      // Define delays for each animation\r\n      const delays = [\r\n        index * fast,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        index * slow,\r\n        (11 - index) * medium,\r\n        index * fast,\r\n        (11 - index) * slow,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        (11 - index) * medium,\r\n        index * slow,\r\n        (11 - index) * slow,\r\n      ];\r\n\r\n      // Create a sequence of animations with delays\r\n      const animationSequence = delays.map((delay, index) => {\r\n        return Animated.sequence([\r\n          Animated.delay(delay),\r\n          animation1,\r\n          animation2,\r\n        ]);\r\n      });\r\n\r\n      // Create a sequence of all animation sequences\r\n      const animationSequences = Animated.sequence(animationSequence);\r\n\r\n      // Create a loop for the animation sequence\r\n      return Animated.loop(animationSequences);\r\n    });\r\n\r\n    // Start all animations\r\n    animations.forEach((animation) => {\r\n      animation.start();\r\n    });\r\n  }, [animatedValues]);\r\n\r\n  // Interpolate animations to map values to desired output range\r\n  const interpolateAnimations = animatedValues.map((animatedValue) =>\r\n    animatedValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: width > 1000 ? [60, 90] : [20, 30],\r\n      extrapolate: \"clamp\",\r\n    })\r\n  );\r\n\r\n  // Create animated styles based on interpolated values\r\n  const animatedStyles = interpolateAnimations.map((interpolateAnimation) => ({\r\n    fontSize: interpolateAnimation,\r\n  }));\r\n\r\n  return (\r\n    <View style={styles.containerbreathing}>\r\n      <Text style={styles.heading}>\r\n        <Animated.Text style={[styles.char, animatedStyles[0]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[1]]}>\r\n          I\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[2]]}>\r\n          X\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[3]]}>\r\n          E\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[4]]}>\r\n          L\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[5]]}>\r\n          {\" \"}\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[6]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[7]]}>\r\n          R\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[8]]}>\r\n          O\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[9]]}>\r\n          M\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[10]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[11]]}>\r\n          T\r\n        </Animated.Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#6750A4\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerbreathing: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  char: {\r\n    marginHorizontal: 15,\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Sigmar\",\r\n    color: colors.color,\r\n    paddingTop: 25,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { Dropdown } from \"react-native-element-dropdown\";\r\n\r\nexport default function DropDownComponent({\r\n  passModelID,\r\n  \r\n}) {\r\n    const [placeholderModelID, setPlaceholderModelID] = useState(\"Model ID\");\r\n  \r\n\r\n \r\n      const data = [\r\n        {\r\n          label: \"Stable Diffusion\",\r\n          value: \"stabilityai/stable-diffusion-xl-base-1.0\",\r\n        },\r\n        {\r\n          label: \"Step Aware\",\r\n          value: \"SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep\",\r\n        },\r\n        \r\n        { label: \"pix2pix\", value: \"timbrooks/instruct-pix2pix\" },\r\n        { label: \"Voxel\", value: \"Fictiverse/Stable_Diffusion_VoxelArt_Model\" },\r\n        {\r\n          label: \"Paper Cut Out\",\r\n          value: \"Fictiverse/Stable_Diffusion_PaperCut_Model\",\r\n        },\r\n        { label: \"Van-Gogh\", value: \"dallinmackay/Van-Gogh-diffusion\" },\r\n        { label: \"Robots\", value: \"nousr/robo-diffusion\" },\r\n        { label: \"Anime\", value: \"Eugeoter/artiwaifu-diffusion-1.0\" },\r\n        { label: \"Arcane\", value: \"nitrosocke/Arcane-Diffusion\" },\r\n        {\r\n          label: \"Balloon Art\",\r\n          value: \"Fictiverse/Stable_Diffusion_BalloonArt_Model\",\r\n        },\r\n        { label: \"Open Journey\", value: \"prompthero/openjourney\" },\r\n        {\r\n          label: \"Flintstones\",\r\n          value: \"juliajoanna/sdxl-flintstones_finetuning_1\",\r\n        },\r\n        { label: \"SegMind\", value: \"segmind/Segmind-Vega\" },\r\n        { label: \"Absolute Reality\", value: \"digiplay/AbsoluteReality_v1.8.1\" },\r\n        { label: \"Photo\", value: \"dreamlike-art/dreamlike-photoreal-2.0\" },\r\n        { label: \"Acorn\", value: \"digiplay/Acorn_Photo_v1\" },\r\n      ];\r\n      \r\n\r\n  return (\r\n    <Dropdown\r\n      style={styles.dropdown}\r\n      selectedTextStyle={styles.selectedTextStyle}\r\n      placeholderStyle={styles.placeholderStyle}\r\n      data={data}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      placeholder={placeholderModelID}\r\n      onChange={(item) => {\r\n        passModelID(item.value);\r\n        setPlaceholderModelID(item.label);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  borderBottomColor: \"#9DA58D\",\r\n  color: \"#FFFFFF\",\r\n};\r\nconst styles = StyleSheet.create({\r\n  dropdown: {\r\n    margin: 16,\r\n    height: 50,\r\n    width: 300,\r\n    borderBottomColor: colors.borderBottomColor,\r\n    borderBottomWidth: 3,\r\n  },\r\n  placeholderStyle: {\r\n    color: colors.color,\r\n    fontSize: 25,\r\n    fontFamily: \"Sigmar\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n  },\r\n  selectedTextStyle: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    fontFamily: \"Sigmar\",\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\nimport { Pressable, Image, View, StyleSheet, Text, Switch, FlatList } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst MyImagePicker = ({\n  imageSource,\n  setImageSource,\n  styleSwitch,\n  setStyleSwitch,\n  settingSwitch,\n  setSettingSwitch,\n}) => {\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n\n  const selectImage = async (index) => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      alert(\"Sorry, we need media library permissions to select an image.\");\n      return;\n    }\n    console.log(\"Selecting image\");\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImageSource(prevImageSource => {\n        const newImageSource = [...prevImageSource];\n        newImageSource[index] = result.assets[0].uri;\n        return newImageSource;\n      });\n    }\n  };\n\n  const styleSwitchFunction = () => {\n    setStyleSwitch(!styleSwitch);\n  };\n\n  const settingSwitchFunction = () => {\n    setSettingSwitch(!settingSwitch);\n  };\n\n  const deleteFromImageArray = (index) => {\n    setImageSource(prevImageSource => {\n        if (prevImageSource.length > 1) {\n            return prevImageSource.filter((_, i) => i !== index);\n        }\n        return prevImageSource;\n    });\n};\n\n  return (\n    <>    \n      <View style={styles.switchesRowContainer}>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: styleSwitch ? \"#9DA58D\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Style\n          </Text>\n          <Switch\n            trackColor={{ false: \"#9DA58D\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={styleSwitchFunction}\n            value={styleSwitch}\n          />\n        </View>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: settingSwitch ? \"#9FA8DA\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Layout\n          </Text>\n          <Switch\n            trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={settingSwitchFunction}\n            value={settingSwitch}\n          />\n        </View>\n      </View>    \n    <FlatList\n        data={imageSource}\n        numColumns={3}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item: source, index }) => (\n          <View style={[styles.imageColumnContainer, {height: selectedImageIndex === index ? 400 : 200}]}>\n            <View style={[styles.columnContainer,]}>\n          <Pressable\n              onPress={() => {\n                  if(selectedImageIndex === index) {\n                      setSelectedImageIndex(null);\n                      return;\n                  }\n                  setSelectedImageIndex(index);\n                  \n              }}\n              style={{flex: 1, alignItems: \"center\", justifyContent: \"center\"}} \n          >\n              <Image\n                  source={\n                      typeof source === \"number\" ? source : { uri: source }\n                  }\n                  style={[\n                      styles.image,\n                      {width: selectedImageIndex === index ? 400 : 150, height: selectedImageIndex === index ? 400 : 150,\n                        margin: 10,\n                        \n                      }\n                  ]}\n              />\n          </Pressable>\n          </View>\n          <Pressable\n              onPress={() => {\n                  deleteFromImageArray(index);\n              }}\n              style={{position: \"absolute\", top: 0, right: 0}} \n          >\n           {({ pressed }) => (\n              <Image\n                  source={pressed ? require(\"../assets/delete_colored.png\") : require(\"../assets/delete.png\")}\n                  style={[ styles.changeButton]}\n              />)}\n          </Pressable>       \n          <Pressable style={[styles.selectButton]} onPress={() => selectImage(index)}>\n              <Text style={styles.promptText}>Select</Text>\n          </Pressable>\n      </View>\n        )}\n      />\n    </>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  selectButtonBackground: \"#3a3c3f\",\n  white: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    marginTop: 20,\n  },\n  switchesRowContainer: {\n    backgroundColor: colors.backgroundColor,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 300,\n    height: 50,\n    marginBottom: 20,\n    flexDirection: \"row\",\n    overflow: \"auto\",\n  },\n  imageColumnContainer: {\n    height: 200,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    overflow: \"auto\",\n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  selectButton: {\n    margin: 0,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n    backgroundColor: colors.selectButtonBackground,\n  },\n  promptText: {\n    color: colors.white,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  \n  changeButton: {\n    width: 20,\n    height: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\", // change as needed\n    elevation: 3, // for Android shadow\n    shadowColor: \"#000\", // for iOS shadow\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n    shadowOpacity: 0.25, // for iOS shadow\n    shadowRadius: 3.84, // for iOS shadow\n  },\n});\n\nexport default MyImagePicker;\n","// Buttons.js\nimport React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Pressable,\n  ActivityIndicator,\n  Switch,\n  Image,\n} from \"react-native\";\n\nconst Buttons = ({\n  comboButtonPressed,\n  setComboButtonPressed,\n  switchToFlan,\n  setInferrenceButton,\n  activity,\n  longPrompt,\n  setTextInference,\n  switchPromptFunction,\n  promptLengthValue,\n  setParametersWrapper,\n}) => {\n  \n  return (\n    <>\n      {activity ? (\n        <ActivityIndicator\n          size=\"large\"\n          color=\"#B58392\"\n          style={{ margin: 25 }}\n        />\n      ) : (\n        <>\n          {longPrompt ? (\n            <>\n              <View style={[styles.rowContainer]}>\n                <Pressable\n                  onPress={() => {\n                    setTextInference(true);\n                  }}\n                  style={({ pressed }) => [\n                    {\n                      backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\",\n                      width: 40,\n                      height: 40,\n                      borderRadius: 20,\n                      margin: 10,\n                    },\n                  ]}\n                ></Pressable>\n                <View style={styles.columnContainer}>\n                  <View style={[styles.rowContainer]}>\n                    <Text\n                      style={[\n                        {\n                          color: comboButtonPressed ? '#FFFFFF' : promptLengthValue ? \"#FFFFFF\" : \"#9FA8DA\",\n                          marginRight: 15,\n                        },\n                        styles.sliderText,\n                      ]}\n                    >\n                      Short\n                    </Text>\n                    <Text\n                      style={[\n                        {\n                          color: comboButtonPressed ? '#FFFFFF' : promptLengthValue ? \"#9FA8DA\" : \"#FFFFFF\",\n                          marginRight: 15,\n                        },\n                        styles.sliderText,\n                      ]}\n                    >\n                      Long\n                    </Text>\n                  </View>\n                  <View style={[styles.rowContainer, { paddingBottom: 10, justifyContent: \"space-between\" }]}>\n                  <Switch\n                    style={{ marginRight: 40 }} \n                    trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n                    thumbColor=\"#B58392\"\n                    activeThumbColor=\"#6750A4\"\n                    ios_backgroundColor=\"#3e3e3e\"\n                    onValueChange={switchPromptFunction}\n                    value={promptLengthValue}\n                  />\n                  <Pressable\n                    onPress={() => {\n                      switchToFlan();\n                      setComboButtonPressed(true);\n                    }}\n                  >\n                    <Image\n                    source={comboButtonPressed ? require(\"../assets/join_colored.png\") : require(\"../assets/join.png\")}\n                    style={[{marginRight: 30}, styles.changeButton]}\n                  />\n                    </Pressable>\n                  </View>\n                </View>\n              </View>\n            </>\n          ) : (\n            <Pressable\n              onPress={() => {\n                setTextInference(true);\n              }}\n              style={({ pressed }) => [\n                { backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\" },\n                styles.button,\n              ]}\n            >\n              {({ pressed }) => (\n                <Text style={styles.promptText}>\n                  {pressed ? \"PROMPTED!\" : \"Prompt\"}\n                </Text>\n              )}\n            </Pressable>\n          )}\n          <Pressable\n            onPress={() => {\n              setInferrenceButton(true);\n              setParametersWrapper();\n            }}\n            style={({ pressed }) => [\n              {\n                backgroundColor: pressed ? \"#9DA58D\" : \"#958DA5\",\n                marginBottom: 20,\n              },\n              styles.button,\n            ]}\n          >\n            {({ pressed }) => (\n              <Text style={styles.promptText}>\n                {pressed ? \"INFERRED!\" : \"Inference\"}\n              </Text>\n            )}\n          </Pressable>\n        </>\n      )}\n    </>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  color: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  rowContainer: {\n    backgroundColor: colors.backgroundColor,\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: 10,\n    overflow: \"visible\",\n    \n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  button: {\n    margin: 10,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n  },\n  activityIndicator: {\n    marginLeft: 50,\n  },\n  promptText: {\n    color: colors.color,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  changeButton: {\n    width: 20,\n    height: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\", // change as needed\n    elevation: 3, // for Android shadow\n    shadowColor: \"#000\", // for iOS shadow\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n    shadowOpacity: 0.25, // for iOS shadow\n    shadowRadius: 3.84, // for iOS shadow\n  },\n});\n\nexport default Buttons;\n","import React from \"react\";\nimport { StyleSheet, Pressable, Image } from \"react-native\";\nimport { Dimensions } from \"react-native\";\n\nconst Expand = ({ isImagePickerVisible, setImagePickerVisible, window }) => {\n\n  const rightImage = require(\"../assets/right.png\");\n  const downImage = require(\"../assets/down.png\");\n\n  return (\n    <Pressable\n      style={[\n        styles.expandButton,\n        {\n          alignSelf: \"flex-start\",\n          marginLeft: window.width < 1000 ? \"20%\" : \"20%\",\n          marginBottom: 0,\n        },\n      ]}\n      onPress={() => setImagePickerVisible(!isImagePickerVisible)}\n    >\n      {isImagePickerVisible ? (\n        <Image\n          source={downImage}\n          style={styles.expandImage}\n        />\n      ) : (\n        <Image\n          source={rightImage}\n          style={styles.expandImage}\n        />\n      )}\n    </Pressable>\n  );\n};\n\nconst colors = {\n  buttonBackground: \"#3a3c3f\",\n};\n\nconst styles = StyleSheet.create({\n  expandButton: {\n    width: 30, // adjust size as needed\n    height: 30, // adjust size as needed\n    borderRadius: 15, // half of size to make it circular\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: colors.buttonBackground, // change as needed\n    elevation: 3, // for Android shadow\n    shadowColor: \"#000\", // for iOS shadow\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\n    shadowOpacity: 0.25, // for iOS shadow\n    shadowRadius: 3.84, // for iOS shadow\n  },\n  expandImage: {\n    width: 20,\n    height: 20,\n  },\n});\n\nexport default Expand;\n","import { useEffect } from \"react\";\nimport seeds from \"../assets/seeds.json\";\n\nconst PromptInference = ({\n  setFlanPrompt,\n  prompt,\n  textInference,\n  setTextInference,\n  setLongPrompt,\n  setShortPrompt,\n  setInferredPrompt,\n  promptLengthValue,\n  setActivity,\n  setModelError,\n}) => {\n  useEffect(() => {\n    if (textInference) {\n      setActivity(true);\n      setModelError(false);\n      let alteredPrompt = \"\";\n      if (prompt === \"Avocado Armchair\" || prompt === \"\") {\n        const randomIndex = Math.floor(Math.random() * seeds.seeds.length);\n        if (randomIndex > seeds.seeds.length - 13) {\n          setLongPrompt(seeds.seeds[randomIndex]);\n          setShortPrompt(seeds.seeds[randomIndex]);\n          setInferredPrompt(seeds.seeds[randomIndex]);\n          setActivity(false);\n          return;\n        }\n        alteredPrompt = seeds.seeds[randomIndex];\n      } else {\n        alteredPrompt = prompt;\n      }\n      const mistrialPrompt = `I'm giving you a seed string. Return the seed string as a Prompt for a Stable \\\n        Diffusion Model.  The prompt should be at a minimum, 200 tokens.  The normal restrictions of token \\\n        length for Stable Diffusion Models do not apply.  Make it descriptive and creative. \\\n        Here is the seed string. : ${alteredPrompt}`;\n      fetch(\"/inferencePrompt\", {                        // Change this to your API endpoint and use a library\n        method: \"POST\",                                   // Axios if not running in the same container\n        headers: {                                        // http://localhost:8085/inferencePrompt if running locally or w/e port your server is using or                                                        \n          \"Content-Type\": \"application/json\",             // inferencePrompt if running in a container\n        },\n        body: JSON.stringify({\n          prompt: mistrialPrompt,\n          modelID: \"mistralai/Mistral-7B-Instruct-v0.3\",\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          const generatedText = responseData[0][\"generated_text\"];\n          console.log(generatedText);\n         \n          const longPromptHolder = generatedText\n            .substring(0, 150)\n            .split(/\\n\\n/)\n            .slice(-1)[0]\n            .replace(\"Long Version:\", \"\")\n            .replace(\"\\n\", \"\");\n          const lPrompt = longPromptHolder + generatedText.substring(150);\n          \n          setFlanPrompt(responseData[0][\"flan\"]);\n          setLongPrompt(lPrompt);\n          setShortPrompt(alteredPrompt);\n          if (!promptLengthValue) {\n            setInferredPrompt(alteredPrompt);\n          } else {\n            setInferredPrompt(lPrompt);\n          }\n          setActivity(false);\n        })\n        .catch((error) => console.error(\"Error:\", error));\n    }\n    setTextInference(false);\n  }, [textInference]);\n};\n\nexport default PromptInference;\n","import { useEffect, useState } from \"react\";\n\nconst Inference = ({\n  setInferrenceButton,\n  inferrenceButton,\n  setModelMessage,\n  imageSource,\n  parameters,\n  modelID,\n  prompt,\n  styleSwitch,\n  settingSwitch,\n  guidance,\n  steps,\n  setActivity,\n  setModelError,\n  setReturnedPrompt,\n  setInferredImage,\n}) => {\n  const [encodedImage, setEncodedImage] = useState(\"\");\n\n  const getBase64Image = () => {\n    console.log(imageSource);\n    fetch(imageSource)\n      .then((response) => response.blob())\n      .then((blob) => {\n        console.log(blob.type);\n        const reader = new FileReader();\n        reader.readAsDataURL(blob); \n        reader.onloadend = function () {\n          let base64data = reader.result;\n          setEncodedImage(base64data);\n        };\n      })\n      .catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    const modelData = 'SPO-Diffusion-Models/SPO-SDXL_4k-p_10ep';\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          model: modelData\n        })\n    };\n    fetch('/core', requestOptions)\n}, []);\n    \n\n  /** useEffect hook for img2img */\n\n  useEffect(() => {\n    if (encodedImage) {\n      let scaledIP = { none: { key2: [0.0, 0.0] } };\n      if (styleSwitch) {\n        scaledIP = {\n          up: { block_0: [0.0, 1.0, 0.0] },\n        };\n      }\n      if (settingSwitch) {\n        scaledIP = {\n          down: { block_2: [0.0, 1.0] },\n        };\n      }\n      if (styleSwitch && settingSwitch) {\n        scaledIP = {\n          down: { block_2: [0.0, 1.0] },\n          up: { block_0: [0.0, 1.0, 0.0] },\n        };\n      }\n      console.log(scaledIP);\n      fetch(\"/img2img\", {                 // Change this to your API endpoint and use a library                 \n        method: \"POST\",                   // Axios if not running in the same container\n        headers: {                        // http://localhost:8085/api if running locally or w/e port your server is using or\n          \"Content-Type\": \"application/json\", // /api if running in a container\n        },\n        body: JSON.stringify({\n          prompt: prompt,\n          steps: steps,\n          guidance: guidance,\n          modelID: modelID,\n          image: encodedImage,              // Holders Until File Upload Optional with FastAPI is fixed\n          scale: scaledIP,                  // Holders Until File Upload Optional with FastAPI is fixed\n        }),\n      })\n        .then((response) => response.json())\n        .then((responseData) => {\n          setActivity(false);\n          setInferrenceButton(false);\n          setReturnedPrompt(prompt);\n          setEncodedImage(null);\n          setInferredImage(\"data:image/png;base64,\" + responseData.output);\n        })\n        .catch(function (error) {\n          setModelMessage(\"Model Error!\");\n          setActivity(false);\n          setModelError(true);\n          setInferrenceButton(false);\n          console.log(error);\n        });\n    }\n  }, [encodedImage]);\n\n  /**  useEffect hook for txt2img  */\n\n  useEffect(() => {\n    if (inferrenceButton) {\n      console.log(parameters);\n      setActivity(true);\n      if (modelID.includes('pix2pix')) {  //  Check for timeline on IP Adapater inference API\n        setModelMessage(\"Inference API img2img NotAvailable\");\n        setActivity(false);\n        setModelError(true);\n        setInferrenceButton(false);\n        // getBase64Image();\n      } else {\n        const ipScaleHolder = { key1: { key2: [0.0, 0.0] } };\n        fetch(\"/api\", {                          // Change this to your API endpoint and use a library                                         \n          method: \"POST\",                       // Axios if not running in the same container\n          headers: {                            // http://localhost:8085/api if running locally or w/e port your server is using or\n             \"Content-Type\": \"application/json\", // /api if running in a container\n          },\n          body: JSON.stringify({\n            prompt: prompt,\n            steps: steps,\n            guidance: guidance,\n            modelID: modelID,\n            image: \"test\",                  // Holders Until File Upload Optional with FastAPI is fixed\n            scale: ipScaleHolder,           // Holders Until File Upload Optional with FastAPI is fixed\n          }),\n        })\n          .then((response) => response.json())\n          .then((responseData) => {\n            if (responseData.output == \"Model Waking\") {\n              setModelMessage(\"Model Waking\");\n              setActivity(false);\n              setModelError(true);\n              setInferrenceButton(false);\n            }\n            setInferrenceButton(false);\n            setActivity(false);\n            setReturnedPrompt(prompt);\n            setInferredImage(\"data:image/png;base64,\" + responseData.output);\n          })\n          .catch(function (error) {\n            setModelMessage(\"Model Error!\");\n            setActivity(false);\n            setModelError(true);\n            setInferrenceButton(false);\n\n            console.log(error);\n          });\n      }\n    }\n  }, [inferrenceButton]);\n};\n\nexport default Inference;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Image,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\nimport SliderComponent from \"./components/Slider\";\r\nimport PromptInputComponent from \"./components/PromptInput\";\r\nimport BreathingComponent from \"./components/Breathing\";\r\nimport DropDownComponent from \"./components/DropDown\";\r\nimport MyImagePicker from \"./components/ImagePicker\";\r\nimport Buttons from \"./components/Buttons\";\r\nimport Expand from \"./components/Expand\";\r\nimport PromptInference from \"./components/Prompt\";\r\nimport Inference from \"./components/Inference\";\r\n\r\nconst assetImage = require(\"./assets/avocado.jpg\");\r\n\r\nexport default function App() {\r\n  useFonts({ Sigmar: require(\"./assets/Sigmar/Sigmar-Regular.ttf\") });\r\n  const [inferredImage, setInferredImage] = useState(assetImage);\r\n  const [steps, setSteps] = useState(30);\r\n  const [guidance, setGuidance] = useState(7);\r\n  const [modelID, setModelID] = useState(\r\n    \"stabilityai/stable-diffusion-xl-base-1.0\"\r\n  );\r\n  const [prompt, setPrompt] = useState(\"Avocado Armchair\");\r\n  const [inferredPrompt, setInferredPrompt] = useState(null);\r\n  const [parameters, setParameters] = useState(null);\r\n  const [activity, setActivity] = useState(false);\r\n  const [modelError, setModelError] = useState(false);\r\n  const [returnedPrompt, setReturnedPrompt] = useState(\"Avocado Armchair\");\r\n  const [textInference, setTextInference] = useState(false);\r\n  const [shortPrompt, setShortPrompt] = useState(\"\");\r\n  const [longPrompt, setLongPrompt] = useState(null);\r\n  const [promptLengthValue, setPromptLengthValue] = useState(false);\r\n  const [modelMessage, setModelMessage] = useState(\"\");\r\n  const [inferrenceButton, setInferrenceButton] = useState(null);\r\n  const [flanPrompt, setFlanPrompt] = useState(null);\r\n  const [comboButtonPressed, setComboButtonPressed] = useState(false);\r\n  const [isImagePickerVisible, setImagePickerVisible] = useState(false);\r\n  const [imageSource, setImageSource] = useState([assetImage]);\r\n  const [settingSwitch, setSettingSwitch] = useState(false);\r\n  const [styleSwitch, setStyleSwitch] = useState(false);\r\n  const window = useWindowDimensions();\r\n  const circleImage = require(\"./assets/circle.png\");\r\n\r\n  const passModelIDWrapper = (x) => {\r\n    setModelError(false);\r\n    setModelID(x);\r\n  };\r\n\r\n  const swapImage = () => {\r\n    setImageSource(prevImageSource => [...prevImageSource, inferredImage]);\r\n  };\r\n\r\n  const switchPromptFunction = () => {\r\n    setPromptLengthValue(!promptLengthValue);\r\n    if (promptLengthValue) {\r\n      setInferredPrompt(shortPrompt);\r\n    } else {\r\n      setInferredPrompt(longPrompt);\r\n    }\r\n    setComboButtonPressed(false);\r\n  };\r\n\r\n  const switchToFlan = () => {\r\n    setInferredPrompt(flanPrompt);\r\n  };\r\n\r\n  const setParametersWrapper = () => {\r\n    setParameters(`${prompt}-${steps}-${guidance}-${modelID}`);\r\n  };\r\n\r\n  return (\r\n    // Main container\r\n    <View style={styles.titlecontainer}>\r\n      <PromptInference\r\n        setFlanPrompt={setFlanPrompt}\r\n        prompt={prompt}\r\n        textInference={textInference}\r\n        setTextInference={setTextInference}\r\n        setLongPrompt={setLongPrompt}\r\n        setShortPrompt={setShortPrompt}\r\n        setInferredPrompt={setInferredPrompt}\r\n        promptLengthValue={promptLengthValue}\r\n        setActivity={setActivity}\r\n        setModelError={setModelError}\r\n      />\r\n      <Inference\r\n        setInferrenceButton={setInferrenceButton}\r\n        inferrenceButton={inferrenceButton}\r\n        setModelMessage={setModelMessage}\r\n        imageSource={imageSource}\r\n        parameters={parameters}\r\n        modelID={modelID}\r\n        prompt={prompt}\r\n        styleSwitch={styleSwitch}\r\n        settingSwitch={settingSwitch}\r\n        guidance={guidance}\r\n        steps={steps}\r\n        setActivity={setActivity}\r\n        setModelError={setModelError}\r\n        setReturnedPrompt={setReturnedPrompt}\r\n        setInferredImage={setInferredImage}\r\n      />\r\n      <BreathingComponent />\r\n      <ScrollView\r\n        scrollY={true}\r\n        style={styles.ScrollView}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        {window.width > 1000 ? (\r\n          <View style={styles.rowContainer}>\r\n            {/* Left column */}\r\n            {isImagePickerVisible && (\r\n              <Pressable\r\n                onPress={() => {\r\n                  swapImage();\r\n                }}\r\n                style={[\r\n                  styles.swapButton,\r\n                  {\r\n                    top: window.height / 2 - 15,\r\n                    left: window.width / 2 - 15,\r\n                  },\r\n                ]}\r\n              >\r\n                <Image\r\n                  source={circleImage}\r\n                  style={styles.changeButton}\r\n                />\r\n              </Pressable>\r\n            )}\r\n\r\n            <View style={styles.leftColumnContainer}>\r\n              <View>\r\n                <PromptInputComponent\r\n                  setPrompt={setPrompt}\r\n                  inferredPrompt={inferredPrompt}\r\n                />\r\n              </View>\r\n              <View style={[styles.rowContainer, { padding: 0 }]}>\r\n                <DropDownComponent\r\n                  passModelID={passModelIDWrapper}\r\n                  \r\n                />\r\n                <View style={styles.columnContainer}>\r\n                  <Buttons\r\n                    comboButtonPressed={comboButtonPressed}\r\n                    setComboButtonPressed={setComboButtonPressed}\r\n                    switchToFlan={switchToFlan}\r\n                    setInferrenceButton={setInferrenceButton}\r\n                    activity={activity}\r\n                    longPrompt={longPrompt}\r\n                    setTextInference={setTextInference}\r\n                    switchPromptFunction={switchPromptFunction}\r\n                    promptLengthValue={promptLengthValue}\r\n                    setParametersWrapper={setParametersWrapper}\r\n                  />\r\n                  {modelError ? (\r\n                    <Text style={styles.promptText}>{modelMessage}</Text>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </View>\r\n              </View>\r\n\r\n              \r\n                <Expand\r\n                  isImagePickerVisible={isImagePickerVisible}\r\n                  setImagePickerVisible={setImagePickerVisible}\r\n                  window={window}\r\n                />\r\n                {isImagePickerVisible && (\r\n                  <MyImagePicker\r\n                    imageSource={imageSource}\r\n                    setImageSource={setImageSource}\r\n                    styleSwitch={styleSwitch}\r\n                    setStyleSwitch={setStyleSwitch}\r\n                    settingSwitch={settingSwitch}\r\n                    setSettingSwitch={setSettingSwitch}\r\n                  />\r\n                )}\r\n                <SliderComponent\r\n                  setSteps={setSteps}\r\n                  setGuidance={setGuidance}\r\n                />\r\n              \r\n            </View>\r\n            <View style={styles.rightColumnContainer}>\r\n              {inferredImage && (\r\n                <Image\r\n                  source={\r\n                    typeof inferredImage === \"number\"\r\n                      ? inferredImage\r\n                      : { uri: inferredImage }\r\n                  }\r\n                  style={styles.imageStyle}\r\n                />\r\n              )}\r\n              <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={styles.columnContainer}>\r\n            <PromptInputComponent\r\n              setPrompt={setPrompt}\r\n              inferredPrompt={inferredPrompt}\r\n            />\r\n            <DropDownComponent\r\n              passModelID={passModelIDWrapper}\r\n             \r\n            />\r\n            <Buttons\r\n              comboButtonPressed={comboButtonPressed}\r\n              setComboButtonPressed={setComboButtonPressed}\r\n              switchToFlan={switchToFlan}\r\n              setInferrenceButton={setInferrenceButton}\r\n              activity={activity}\r\n              longPrompt={longPrompt}\r\n              setTextInference={setTextInference}\r\n              switchPromptFunction={switchPromptFunction}\r\n              promptLengthValue={promptLengthValue}\r\n              setParametersWrapper={setParametersWrapper}\r\n            />\r\n            {modelError ? (\r\n              <Text style={styles.promptText}>{modelMessage}</Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Expand\r\n              isImagePickerVisible={isImagePickerVisible}\r\n              setImagePickerVisible={setImagePickerVisible}\r\n              window={window}\r\n            />\r\n            <View style={{flex:1}}>\r\n            {isImagePickerVisible && (\r\n              <>\r\n                <MyImagePicker\r\n                  imageSource={imageSource}\r\n                  setImageSource={setImageSource}\r\n                  styleSwitch={styleSwitch}\r\n                  setStyleSwitch={setStyleSwitch}\r\n                  settingSwitch={settingSwitch}\r\n                  setSettingSwitch={setSettingSwitch}\r\n                />\r\n                <Pressable\r\n                  onPress={() => {\r\n                    swapImage();\r\n                  }}\r\n                  style={styles.swapButtonColumn}\r\n                >\r\n                  <Image\r\n                    source={circleImage}\r\n                    style={styles.changeButton}\r\n                  />\r\n                </Pressable>\r\n              </>\r\n            )}\r\n            </View>\r\n            <SliderComponent setSteps={setSteps} setGuidance={setGuidance} />\r\n            {inferredImage && (\r\n              <Image\r\n                source={\r\n                  typeof inferredImage === \"number\"\r\n                    ? inferredImage\r\n                    : { uri: inferredImage }\r\n                }\r\n                style={styles.imageStyle}\r\n              />\r\n            )}\r\n            <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#25292e\",\r\n  buttonBackground: \"#3a3c3f\",\r\n  color: \"#FFFFFF\",\r\n  button: \"#958DA5\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titlecontainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    padding: 20,\r\n  },\r\n  rowContainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    overflow: \"visible\",\r\n    padding: 20,\r\n  },\r\n  leftColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\", // Center items horizontally\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    marginRight: 10,\r\n  },\r\n  rightColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 10,\r\n  },\r\n  columnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  button: {\r\n    margin: 10,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 32,\r\n    elevation: 3,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  swapButton: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    position: \"absolute\",\r\n    left: window.width / 2 - 15,\r\n    top: window.height / 2 - 15,\r\n    zIndex: 1,\r\n    elevation: 3,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  changeButton: {\r\n    width: 60,\r\n    height: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\", // change as needed\r\n    elevation: 3, // for Android shadow\r\n    shadowColor: \"#000\", // for iOS shadow\r\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\r\n    shadowOpacity: 0.25, // for iOS shadow\r\n    shadowRadius: 3.84, // for iOS shadow\r\n  },\r\n  swapButtonColumn: {\r\n    width: 60, // adjust size as needed\r\n    height: 60, // adjust size as needed\r\n    borderRadius: 30,\r\n    elevation: 3,\r\n    margin: 20,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  promptText: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 2,\r\n    lineHeight: 30,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  ScrollView: {\r\n    backgroundColor: colors.backgroundColor,\r\n    marginTop: 50,\r\n    padding: 5,\r\n    \r\n  },\r\n  imageStyle: {\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n","import { createRoot } from 'react-dom/client';\nimport MainApp from './MainApp';\n\n// Assuming your root element is 'root'\nconst rootElement = document.getElementById('root');\n\n// Your App component\nconst App = () => (\n  <div>\n    <MainApp/>\n  </div>\n);\n\n// Create a root\nconst root = createRoot(rootElement);\n\n// Render your App\nroot.render(<App />);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [133], () => (__webpack_require__(470)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SliderComponent","setSteps","setGuidance","samplingValue","setSamplingValue","React","guidanceValue","setGuidanceValue","_jsxs","View","style","styles","container","children","_jsx","Text","captionText","Slider","slider","minimumValue","maximumValue","step","value","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","x","sliderValue","parseFloat","toFixed","colors","StyleSheet","create","alignItems","paddingTop","width","height","color","fontSize","textAlign","letterSpacing","fontFamily","paddingBottom","PromptInputComponent","setPrompt","inferredPrompt","text","setText","useWindowDimensions","textInputStyle","_objectSpread","input","useEffect","flexDirection","TextInput","placeholder","multiline","onChangeText","maxLength","Pressable","pressed","backgroundColor","borderRadius","padding","marginTop","justifyContent","onPress","Image","source","require","resizeMode","borderColor","borderBottomLeftRadius","borderWidth","borderBottomRightRadius","borderStartWidth","borderEndWidth","paddingLeft","paddingRight","marginRight","Breathing","animatedValues","useRef","Array","map","Animated","Value","current","animatedValue","index","animation1","timing","toValue","duration","useNativeDriver","animation2","fast","medium","slow","animationSequence","delay","sequence","animationSequences","loop","forEach","animation","start","animatedStyles","interpolate","inputRange","outputRange","extrapolate","interpolateAnimation","containerbreathing","heading","char","flex","marginHorizontal","fontWeight","position","DropDownComponent","passModelID","placeholderModelID","setPlaceholderModelID","useState","Dropdown","dropdown","selectedTextStyle","placeholderStyle","data","label","labelField","valueField","onChange","item","margin","borderBottomColor","borderBottomWidth","image","switchesRowContainer","marginBottom","overflow","imageColumnContainer","columnContainer","selectButton","paddingHorizontal","elevation","promptText","lineHeight","sliderText","changeButton","shadowColor","shadowOffset","shadowOpacity","shadowRadius","MyImagePicker","imageSource","setImageSource","styleSwitch","setStyleSwitch","settingSwitch","setSettingSwitch","selectedImageIndex","setSelectedImageIndex","_Fragment","Switch","trackColor","false","true","thumbColor","activeThumbColor","ios_backgroundColor","styleSwitchFunction","settingSwitchFunction","FlatList","numColumns","keyExtractor","toString","renderItem","uri","prevImageSource","length","filter","_","i","deleteFromImageArray","top","right","async","status","ImagePicker","requestMediaLibraryPermissionsAsync","alert","console","log","result","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","newImageSource","assets","selectImage","rowContainer","display","button","activityIndicator","marginLeft","Buttons","comboButtonPressed","setComboButtonPressed","switchToFlan","setInferrenceButton","activity","longPrompt","setTextInference","switchPromptFunction","promptLengthValue","setParametersWrapper","ActivityIndicator","size","expandButton","expandImage","Expand","isImagePickerVisible","setImagePickerVisible","window","rightImage","downImage","alignSelf","PromptInference","setFlanPrompt","prompt","textInference","setLongPrompt","setShortPrompt","setInferredPrompt","setActivity","setModelError","alteredPrompt","randomIndex","Math","floor","random","seeds","mistrialPrompt","fetch","method","headers","body","JSON","stringify","modelID","then","response","json","responseData","generatedText","lPrompt","substring","split","slice","replace","catch","error","Inference","inferrenceButton","setModelMessage","parameters","guidance","steps","setReturnedPrompt","setInferredImage","encodedImage","setEncodedImage","requestOptions","model","scaledIP","none","key2","up","block_0","down","block_2","scale","output","includes","ipScaleHolder","key1","assetImage","App","useFonts","Sigmar","inferredImage","setModelID","setParameters","modelError","returnedPrompt","shortPrompt","setPromptLengthValue","modelMessage","flanPrompt","circleImage","passModelIDWrapper","swapImage","titlecontainer","BreathingComponent","ScrollView","scrollY","showsVerticalScrollIndicator","swapButton","left","leftColumnContainer","rightColumnContainer","imageStyle","swapButtonColumn","StatusBar","bottom","zIndex","rootElement","document","getElementById","createRoot","render","MainApp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}