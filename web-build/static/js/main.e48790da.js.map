{"version":3,"file":"static/js/main.e48790da.js","mappings":"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","sources":["components/Slider.js","components/PromptInput.js","components/Breathing.js","components/DropDown.js","components/ImagePicker.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport Slider from \"@react-native-community/slider\";\r\n\r\nexport default function SliderComponent({ setSteps, setGuidance }) {\r\n  const [samplingValue, setSamplingValue] = React.useState(30);\r\n  const [guidanceValue, setGuidanceValue] = React.useState(7);\r\n\r\n  // Handle sampling steps change\r\n  const handleStepChange = (x) => {\r\n    setSamplingValue(x);\r\n    setSteps(x);\r\n  };\r\n\r\n  // Handle guidance change\r\n  const handleGuidanceChange = (x) => {\r\n    setGuidanceValue(parseFloat(x.toFixed(2)));\r\n    setGuidance(parseFloat(x.toFixed(2)));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.captionText}>Sampling Steps</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={3}\r\n        maximumValue={50}\r\n        step={1}\r\n        value={samplingValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleStepChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{samplingValue}</Text>\r\n      <Text style={styles.captionText}>Guidance</Text>\r\n      <Slider\r\n        style={styles.slider}\r\n        minimumValue={0}\r\n        maximumValue={10}\r\n        step={0.1}\r\n        value={guidanceValue}\r\n        minimumTrackTintColor=\"#958DA5\"\r\n        maximumTrackTintColor=\"#9DA58D\"\r\n        thumbTintColor=\"#6750A4\"\r\n        onValueChange={handleGuidanceChange}\r\n      />\r\n      <Text style={styles.sliderValue}>{guidanceValue}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#FFFFFF\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    paddingTop: 50,\r\n  },\r\n  slider: {\r\n    width: 350,\r\n    height: 40,\r\n  },\r\n  captionText: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  sliderValue: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n    paddingBottom: 30,\r\n    width: 350,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport { StyleSheet, TextInput, useWindowDimensions } from \"react-native\";\r\n\r\nexport default function PromptInputComponent({ setPrompt, inferredPrompt }) {\r\n  const [text, setText] = React.useState(\"\");\r\n  const { width } = useWindowDimensions();\r\n\r\n  const textInputStyle = {\r\n    ...styles.input,\r\n    width: width > 500 ? 500 : width - 80,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setText(inferredPrompt);\r\n    setPrompt(inferredPrompt);\r\n  }, [inferredPrompt]);\r\n\r\n  const handleTextChange = (x) => {\r\n    setText(x);\r\n    setPrompt(x);\r\n  };\r\n\r\n  return (\r\n    <TextInput\r\n      style={textInputStyle}\r\n      placeholder=\"Avocado Armchair\"\r\n      multiline\r\n      textAlign=\"center\"\r\n      onChangeText={handleTextChange}\r\n      value={text}\r\n      maxLength={20000}\r\n    />\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  borderColor: \"#B58392\",\r\n  color: \"#000000\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    backgroundColor: colors.backgroundColor,\r\n    borderColor: colors.borderColor,\r\n    borderBottomLeftRadius: 4,\r\n    borderWidth: 4,\r\n    borderBottomRightRadius: 4,\r\n    borderStartWidth: 10,\r\n    borderEndWidth: 10,\r\n    borderRadius: 6,\r\n    height: 200,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    fontSize: 20,\r\n    color: colors.color,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n});\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  useWindowDimensions,\r\n} from \"react-native\";\r\n\r\nexport default function Breathing() {\r\n  // Create an array of Animated values using useRef\r\n  const animatedValues = useRef(\r\n    [...Array(12)].map(() => new Animated.Value(0))\r\n  ).current;\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    // Define animations for each value in animatedValues\r\n    const animations = animatedValues.map((animatedValue, index) => {\r\n      // Animation for increasing value\r\n      const animation1 = Animated.timing(animatedValue, {\r\n        toValue: 1,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      // Animation for decreasing value\r\n      const animation2 = Animated.timing(animatedValue, {\r\n        toValue: 0,\r\n        duration: 2000,\r\n        useNativeDriver: false,\r\n      });\r\n\r\n      const fast = 300;\r\n      const medium = 450;\r\n      const slow = 600;\r\n      // Define delays for each animation\r\n      const delays = [\r\n        index * fast,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        index * slow,\r\n        (11 - index) * medium,\r\n        index * fast,\r\n        (11 - index) * slow,\r\n        index * medium,\r\n        (11 - index) * fast,\r\n        (11 - index) * medium,\r\n        index * slow,\r\n        (11 - index) * slow,\r\n      ];\r\n\r\n      // Create a sequence of animations with delays\r\n      const animationSequence = delays.map((delay, index) => {\r\n        return Animated.sequence([\r\n          Animated.delay(delay),\r\n          animation1,\r\n          animation2,\r\n        ]);\r\n      });\r\n\r\n      // Create a sequence of all animation sequences\r\n      const animationSequences = Animated.sequence(animationSequence);\r\n\r\n      // Create a loop for the animation sequence\r\n      return Animated.loop(animationSequences);\r\n    });\r\n\r\n    // Start all animations\r\n    animations.forEach((animation) => {\r\n      animation.start();\r\n    });\r\n  }, [animatedValues]);\r\n\r\n  // Interpolate animations to map values to desired output range\r\n  const interpolateAnimations = animatedValues.map((animatedValue) =>\r\n    animatedValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: width > 1000 ? [60, 90] : [20, 30],\r\n      extrapolate: \"clamp\",\r\n    })\r\n  );\r\n\r\n  // Create animated styles based on interpolated values\r\n  const animatedStyles = interpolateAnimations.map((interpolateAnimation) => ({\r\n    fontSize: interpolateAnimation,\r\n  }));\r\n\r\n  return (\r\n    <View style={styles.containerbreathing}>\r\n      <Text style={styles.heading}>\r\n        <Animated.Text style={[styles.char, animatedStyles[0]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[1]]}>\r\n          I\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[2]]}>\r\n          X\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[3]]}>\r\n          E\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[4]]}>\r\n          L\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[5]]}>\r\n          {\" \"}\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[6]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[7]]}>\r\n          R\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[8]]}>\r\n          O\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[9]]}>\r\n          M\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[10]]}>\r\n          P\r\n        </Animated.Text>\r\n        <Animated.Text style={[styles.char, animatedStyles[11]]}>\r\n          T\r\n        </Animated.Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  color: \"#6750A4\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerbreathing: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  char: {\r\n    marginHorizontal: 15,\r\n  },\r\n  heading: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Sigmar\",\r\n    color: colors.color,\r\n    paddingTop: 25,\r\n    position: \"absolute\",\r\n  },\r\n});\r\n","import { StyleSheet } from \"react-native\";\r\nimport { Dropdown } from \"react-native-element-dropdown\";\r\n\r\nconst data = [\r\n  {\r\n    label: \"Stable Diffusion\",\r\n    value: \"stabilityai/stable-diffusion-xl-base-1.0\",\r\n  },\r\n  { label: \"Open Journey\", value: \"prompthero/openjourney\" },\r\n  { label: \"Photo\", value: \"dreamlike-art/dreamlike-photoreal-2.0\" },\r\n  { label: \"Arcane\", value: \"nitrosocke/Arcane-Diffusion\" },\r\n  { label: \"Van-Gogh\", value: \"dallinmackay/Van-Gogh-diffusion\" },\r\n  { label: \"Robots\", value: \"nousr/robo-diffusion\" },\r\n];\r\n\r\nexport default function DropDownComponent({ passModelID }) {\r\n  return (\r\n    <Dropdown\r\n      style={styles.dropdown}\r\n      selectedTextStyle={styles.selectedTextStyle}\r\n      placeholderStyle={styles.placeholderStyle}\r\n      data={data}\r\n      labelField=\"label\"\r\n      valueField=\"value\"\r\n      placeholder=\"Model ID\"\r\n      onChange={(item) => {\r\n        passModelID(item.value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  borderBottomColor: \"#9DA58D\",\r\n  color: \"#FFFFFF\",\r\n};\r\nconst styles = StyleSheet.create({\r\n  dropdown: {\r\n    margin: 16,\r\n    height: 50,\r\n    width: 300,\r\n    borderBottomColor: colors.borderBottomColor,\r\n    borderBottomWidth: 3,\r\n  },\r\n  placeholderStyle: {\r\n    color: colors.color,\r\n    fontSize: 25,\r\n    fontFamily: \"Sigmar\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 3,\r\n  },\r\n  selectedTextStyle: {\r\n    color: colors.color,\r\n    fontSize: 20,\r\n    fontFamily: \"Sigmar\",\r\n    letterSpacing: 3,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\nimport { Pressable, Image, View, StyleSheet, Text, Switch } from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst MyImagePicker = ({\n  imageSource,\n  setImageSource,\n  styleSwitch,\n  setStyleSwitch,\n  settingSwitch,\n  setSettingSwitch,\n}) => {\n  const selectImage = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== \"granted\") {\n      alert(\"Sorry, we need media library permissions to select an image.\");\n      return;\n    }\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      setImageSource(result.assets[0]);\n    }\n  };\n\n  const styleSwitchFunction = () => {\n    setStyleSwitch(!styleSwitch);\n  };\n\n  const settingSwitchFunction = () => {\n    setSettingSwitch(!settingSwitch);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.rowContainer}>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: styleSwitch ? \"#9DA58D\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Style\n          </Text>\n          <Switch\n            trackColor={{ false: \"#9DA58D\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={styleSwitchFunction}\n            value={styleSwitch}\n          />\n        </View>\n        <View style={styles.columnContainer}>\n          <Text\n            style={[\n              { color: settingSwitch ? \"#9FA8DA\" : \"#FFFFFF\" },\n              styles.sliderText,\n            ]}\n          >\n            Layout\n          </Text>\n          <Switch\n            trackColor={{ false: \"#958DA5\", true: \"#767577\" }}\n            thumbColor=\"#B58392\"\n            activeThumbColor=\"#6750A4\"\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={settingSwitchFunction}\n            value={settingSwitch}\n          />\n        </View>\n      </View>\n\n      {imageSource ? (\n        <Image source={imageSource} style={styles.image} />\n      ) : (\n        <Image source={require(\"../assets/busta.png\")} style={styles.image} />\n      )}\n      <Pressable style={styles.selectButton} onPress={selectImage}>\n        <Text style={styles.promptText}>Select</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst colors = {\n  backgroundColor: \"#25292e\",\n  selectButtonBackground: \"#3a3c3f\",\n  white: \"#FFFFFF\",\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: 20,\n  },\n  rowContainer: {\n    backgroundColor: colors.backgroundColor,\n    alignItems: \"center\",\n    flex: 1,\n    width: \"100%\",\n    flexDirection: \"row\",\n    overflow: \"auto\",\n  },\n  columnContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  selectButton: {\n    margin: 20,\n    borderRadius: 4,\n    paddingHorizontal: 32,\n    elevation: 3,\n    fontFamily: \"Sigmar\",\n    backgroundColor: colors.selectButtonBackground,\n  },\n  promptText: {\n    color: colors.white,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n  sliderText: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    letterSpacing: 2,\n    lineHeight: 30,\n    fontFamily: \"Sigmar\",\n  },\n});\n\nexport default MyImagePicker;\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  Pressable,\r\n  useWindowDimensions,\r\n  Image,\r\n} from \"react-native\";\r\nimport { registerRootComponent } from \"expo\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport * as Updates from \"expo-updates\";\r\nimport { useFonts } from \"expo-font\";\r\nimport seeds from \"./assets/seeds.json\";\r\n\r\nimport SliderComponent from \"./components/Slider\";\r\nimport PromptInputComponent from \"./components/PromptInput\";\r\nimport BreathingComponent from \"./components/Breathing\";\r\nimport DropDownComponent from \"./components/DropDown\";\r\nimport MyImagePicker from \"./components/ImagePicker\";\r\n\r\nconst assetImage = require(\"./assets/avocado.jpg\");\r\n\r\nexport default function App() {\r\n  useFonts({ Sigmar: require(\"./assets/Sigmar/Sigmar-Regular.ttf\") });\r\n  const [inferredImage, setInferredImage] = useState(assetImage);\r\n  const [steps, setSteps] = useState(30);\r\n  const [guidance, setGuidance] = useState(7);\r\n  const [modelID, setModelID] = useState(\r\n    \"stabilityai/stable-diffusion-xl-base-1.0\"\r\n  );\r\n  const [prompt, setPrompt] = useState(\"Avocado Armchair\");\r\n  const [inferredPrompt, setInferredPrompt] = useState(\"\");\r\n  const [parameters, setParameters] = useState(\"\");\r\n  const [activity, setActivity] = useState(false);\r\n  const [modelError, setModelError] = useState(false);\r\n  const [returnedPrompt, setReturnedPrompt] = useState(\"Avocado Armchair\");\r\n  const [textInference, setTextInference] = useState(false);\r\n  const [ipScale, setIpScale] = useState({});\r\n  const window = useWindowDimensions();\r\n\r\n  const [isImagePickerVisible, setImagePickerVisible] = useState(false);\r\n  const [imageSource, setImageSource] = useState(null);\r\n  const [settingSwitch, setSettingSwitch] = useState(false);\r\n  const [styleSwitch, setStyleSwitch] = useState(false);\r\n\r\n  const passModelIDWrapper = (x) => {\r\n    setModelError(false);\r\n    setModelID(x);\r\n  };\r\n\r\n  const swapImage = () => {\r\n    setImageSource(inferredImage);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (parameters != ''){\r\n      console.log(parameters)\r\n      setActivity(true);\r\n      if (isImagePickerVisible) {\r\n        setModelID(\"stabilityai/stable-diffusion-xl-refiner-1.0\"); \r\n        if (styleSwitch) {\r\n          scale = {\r\n            up: { block_0: [0.0, 1.0, 0.0] },\r\n          };\r\n          setIpScale(scale);\r\n        }\r\n        if (settingSwitch) {\r\n          scale = {\r\n            down: { block_2: [0.0, 1.0] },\r\n            up: { block_0: [0.0, 1.0, 0.0] },\r\n          };\r\n          setIpScale(scale);\r\n        }\r\n      }else{\r\n        setIpScale({});\r\n      }\r\n      let formData = new FormData();\r\n      formData.append('prompt', prompt);\r\n      formData.append('steps', steps);\r\n      formData.append('guidance', guidance);\r\n      formData.append('modelID', modelID);\r\n      formData.append('scale', JSON.stringify(ipScale));\r\n      if (isImagePickerVisible) {\r\n          formData.append('image', {\r\n              uri: imageSource.uri,\r\n              type: 'image/png', // or 'image/png'\r\n              name: 'testImage.png' // or 'testImage.png'\r\n          });\r\n      }\r\n      fetch('api', {             // Change this to your API endpoint and use a library  \r\n      method: 'POST',            // like axios if not running seperate in the same container\r\n      body: formData\r\n    })\r\n    .then(response => response.json())\r\n    .then( responseData => {\r\n        setActivity(false);\r\n        setReturnedPrompt(prompt);\r\n        setInferredImage('data:image/png;base64,' + responseData.output);\r\n      })\r\n      .catch(function (error) {\r\n      setActivity(false);\r\n      setModelError(true);\r\n      console.log(error);\r\n    });\r\n  }\r\n  },[parameters]);\r\n\r\n\r\n  useEffect(() => { \r\n    if(textInference){\r\n      setActivity(true);\r\n      setModelError(false);\r\n      let alteredPrompt = '';     \r\n      if(prompt === 'Avocado Armchair' || prompt === ''){\r\n        const randomIndex = Math.floor(Math.random() * seeds.seeds.length);\r\n        alteredPrompt = seeds.seeds[randomIndex];\r\n      }else {\r\n        alteredPrompt = prompt;\r\n      }\r\n      alteredPrompt = `I'm going to give you a seed string for a stable diffusion model. Return it in \\\r\n        fewer than 500 tokens.  Make it descriptive and creative. Here is the seed string: ${alteredPrompt}`;\r\n      \r\n      fetch('/inferencePrompt', {             // Change this to your API endpoint and use a library  \r\n        method: 'POST',                       // like axios if not running seperate in the same container\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          prompt: alteredPrompt,\r\n          modelID: 'mistralai/Mistral-7B-Instruct-v0.3'\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then( responseData => {\r\n        console.log(responseData[0][\"generated_text\"] );\r\n        setInferredPrompt(responseData[0][\"generated_text\"]);\r\n        setActivity(false);\r\n      })\r\n      .catch(error => console.error('Error:', error));\r\n      }\r\n  setTextInference(false);\r\n  },[textInference]);\r\n\r\n  return (\r\n    // Main container\r\n    <View style={styles.titlecontainer}>\r\n      <BreathingComponent />\r\n      <ScrollView\r\n        scrollY={true}\r\n        style={styles.ScrollView}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        {window.width > 1000 ? (\r\n          <View style={styles.rowContainer}>\r\n            {/* Left column */}\r\n            {isImagePickerVisible && (\r\n              <Pressable\r\n                onPress={() => {\r\n                  swapImage();\r\n                }}\r\n                style={{\r\n                  width: 60,\r\n                  height: 60,\r\n                  borderRadius: 30,\r\n                  position: \"absolute\",\r\n                  left: window.width / 2 - 15,\r\n                  top: window.height / 2 - 15,\r\n                  zIndex: 1,\r\n                  elevation: 3,\r\n                  backgroundColor: \"#3a3c3f\",\r\n                }}\r\n              >\r\n                <Image\r\n                  source={require(\"./assets/circle.png\")}\r\n                  style={styles.changeButton}\r\n                />\r\n              </Pressable>\r\n            )}\r\n\r\n            <View style={styles.leftColumnContainer}>\r\n              <View>\r\n                <PromptInputComponent\r\n                  setPrompt={setPrompt}\r\n                  inferredPrompt={inferredPrompt}\r\n                />\r\n              </View>\r\n              <View style={styles.dropdownRowContainer}>\r\n                <DropDownComponent passModelID={passModelIDWrapper} />\r\n                <View style={styles.columnContainer}>\r\n                  {activity ? (\r\n                    <ActivityIndicator\r\n                      size=\"large\"\r\n                      color=\"#B58392\"\r\n                      style={{ margin: 25 }}\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      <Pressable\r\n                        onPress={() => {\r\n                          setTextInference(true);\r\n                        }}\r\n                        style={({ pressed }) => [\r\n                          { backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\" },\r\n                          styles.button,\r\n                        ]}\r\n                      >\r\n                        {({ pressed }) => (\r\n                          <Text style={styles.promptText}>\r\n                            {pressed ? \"INFERRED!\" : \"Prompt\"}\r\n                          </Text>\r\n                        )}\r\n                      </Pressable>\r\n                      <Pressable\r\n                        onPress={() => {\r\n                          setParameters(\r\n                            `${prompt}-${steps}-${guidance}-${modelID}`\r\n                          );\r\n                        }}\r\n                        style={({ pressed }) => [\r\n                          { backgroundColor: pressed ? \"#9DA58D\" : \"#958DA5\" },\r\n                          styles.button,\r\n                        ]}\r\n                      >\r\n                        {({ pressed }) => (\r\n                          <Text style={styles.promptText}>\r\n                            {pressed ? \"INFERRED!\" : \"Inference\"}\r\n                          </Text>\r\n                        )}\r\n                      </Pressable>\r\n                    </div>\r\n                  )}\r\n                  {modelError ? (\r\n                    <Text style={styles.promptText}>Model Error!</Text>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </View>\r\n              </View>\r\n              <View>\r\n                <Pressable\r\n                  style={styles.expandButton}\r\n                  onPress={() => setImagePickerVisible(!isImagePickerVisible)}\r\n                >\r\n                  {isImagePickerVisible ? (\r\n                    <Image\r\n                      source={require(\"./assets/right.png\")}\r\n                      style={styles.expandImage}\r\n                    />\r\n                  ) : (\r\n                    <Image\r\n                      source={require(\"./assets/down.png\")}\r\n                      style={styles.expandImage}\r\n                    />\r\n                  )}\r\n                </Pressable>\r\n                {isImagePickerVisible && (\r\n                  <MyImagePicker\r\n                    imageSource={imageSource}\r\n                    setImageSource={setImageSource}\r\n                    styleSwitch={styleSwitch}\r\n                    setStyleSwitch={setStyleSwitch}\r\n                    settingSwitch={settingSwitch}\r\n                    setSettingSwitch={setSettingSwitch}\r\n                  />\r\n                )}\r\n                <SliderComponent\r\n                  setSteps={setSteps}\r\n                  setGuidance={setGuidance}\r\n                />\r\n              </View>\r\n            </View>\r\n            {/* Right column */}\r\n\r\n            <View style={styles.rightColumnContainer}>\r\n              {inferredImage && (\r\n                <Image source={inferredImage} style={styles.imageStyle} />\r\n              )}\r\n              <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n            </View>\r\n          </View>\r\n        ) : (\r\n          <View style={styles.columnContainer}>\r\n            <PromptInputComponent\r\n              setPrompt={setPrompt}\r\n              inferredPrompt={inferredPrompt}\r\n            />\r\n            <DropDownComponent passModelID={passModelIDWrapper} />\r\n            {activity ? (\r\n              <ActivityIndicator size=\"large\" color=\"#B58392\" />\r\n            ) : (\r\n              <div>\r\n                <Pressable\r\n                  onPress={() => {\r\n                    setTextInference(true);\r\n                  }}\r\n                  style={({ pressed }) => [\r\n                    { backgroundColor: pressed ? \"#958DA5\" : \"#9DA58D\" },\r\n                    styles.button,\r\n                  ]}\r\n                >\r\n                  {({ pressed }) => (\r\n                    <Text style={styles.promptText}>\r\n                      {pressed ? \"INFERRED!\" : \"Prompt\"}\r\n                    </Text>\r\n                  )}\r\n                </Pressable>\r\n                <Pressable\r\n                  onPress={() => {\r\n                    setParameters(`${prompt}-${steps}-${guidance}-${modelID}`);\r\n                  }}\r\n                  style={({ pressed }) => [\r\n                    { backgroundColor: pressed ? \"#9DA58D\" : \"#958DA5\" },\r\n                    styles.button,\r\n                  ]}\r\n                >\r\n                  {({ pressed }) => (\r\n                    <Text style={styles.promptText}>\r\n                      {pressed ? \"INFERRED!\" : \"Inference\"}\r\n                    </Text>\r\n                  )}\r\n                </Pressable>\r\n              </div>\r\n            )}\r\n            {modelError ? (\r\n              <Text style={styles.promptText}>Model Error!</Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Pressable\r\n              style={styles.expandButton}\r\n              onPress={() => setImagePickerVisible(!isImagePickerVisible)}\r\n            >\r\n              {isImagePickerVisible ? (\r\n                <Image\r\n                  source={require(\"./assets/right.png\")}\r\n                  style={styles.expandImage}\r\n                />\r\n              ) : (\r\n                <Image\r\n                  source={require(\"./assets/down.png\")}\r\n                  style={styles.expandImage}\r\n                />\r\n              )}\r\n            </Pressable>\r\n            {isImagePickerVisible && (\r\n              <>\r\n                <MyImagePicker\r\n                  imageSource={imageSource}\r\n                  setImageSource={setImageSource}\r\n                  styleSwitch={styleSwitch}\r\n                  setStyleSwitch={setStyleSwitch}\r\n                  settingSwitch={settingSwitch}\r\n                  setSettingSwitch={setSettingSwitch}\r\n                />\r\n                <Pressable \r\n                  onPress={() => {\r\n                    swapImage();\r\n                  }}\r\n                  style={styles.pressable}>\r\n                  <Image\r\n                    source={require(\"./assets/circle.png\")}\r\n                    style={styles.changeButton}\r\n                  />\r\n                </Pressable>\r\n              </>\r\n            )}\r\n            <SliderComponent setSteps={setSteps} setGuidance={setGuidance} />\r\n            {inferredImage && (\r\n              <Image source={inferredImage} style={styles.imageStyle} />\r\n            )}\r\n            <Text style={styles.promptText}>{returnedPrompt}</Text>\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst colors = {\r\n  backgroundColor: \"#25292e\",\r\n  buttonBackground: \"#3a3c3f\",\r\n  color: \"#FFFFFF\",\r\n  button: \"#958DA5\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titlecontainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    padding: 20,\r\n  },\r\n  rowContainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    overflow: \"visible\",\r\n    padding: 20,\r\n  },\r\n  dropdownRowContainer: {\r\n    backgroundColor: colors.backgroundColor,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginTop: 10,\r\n    overflow: \"visible\",\r\n  },\r\n  leftColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\", // Center items horizontally\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    marginRight: 10,\r\n  },\r\n  rightColumnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    marginLeft: 10,\r\n  },\r\n  columnContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  button: {\r\n    margin: 20,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 32,\r\n    elevation: 3,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  columnButton: {\r\n    margin: 20,\r\n    borderRadius: 4,\r\n    paddingHorizontal: 32,\r\n    elevation: 3,\r\n    fontFamily: \"Sigmar\",\r\n    width: 200,\r\n  },\r\n  expandButton: {\r\n    width: 30, // adjust size as needed\r\n    height: 30, // adjust size as needed\r\n    borderRadius: 15, // half of size to make it circular\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.buttonBackground, // change as needed\r\n    elevation: 3, // for Android shadow\r\n    shadowColor: \"#000\", // for iOS shadow\r\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\r\n    shadowOpacity: 0.25, // for iOS shadow\r\n    shadowRadius: 3.84, // for iOS shadow\r\n  },\r\n  changeButton: {\r\n    width: 60,\r\n    height: 60,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\", // change as needed\r\n    elevation: 3, // for Android shadow\r\n    shadowColor: \"#000\", // for iOS shadow\r\n    shadowOffset: { width: 0, height: 2 }, // for iOS shadow\r\n    shadowOpacity: 0.25, // for iOS shadow\r\n    shadowRadius: 3.84, // for iOS shadow\r\n  },\r\n  expandImage: {\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  pressable: {\r\n    width: 60, // adjust size as needed\r\n    height: 60, // adjust size as needed\r\n    borderRadius: 30,\r\n    elevation: 3,\r\n    margin: 20,\r\n    backgroundColor: colors.buttonBackground,\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  activityIndicator: {\r\n    marginLeft: 50,\r\n  },\r\n  promptText: {\r\n    color: colors.color,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 2,\r\n    lineHeight: 30,\r\n    fontFamily: \"Sigmar\",\r\n  },\r\n  ScrollView: {\r\n    backgroundColor: colors.backgroundColor,\r\n    marginTop: 50,\r\n    padding: 5,\r\n  },\r\n  imageStyle: {\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n\r\nregisterRootComponent(App);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [947], () => (__webpack_require__(5387)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SliderComponent","setSteps","setGuidance","samplingValue","setSamplingValue","React","guidanceValue","setGuidanceValue","_jsxs","View","style","styles","container","children","_jsx","Text","captionText","Slider","slider","minimumValue","maximumValue","step","value","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","onValueChange","x","sliderValue","parseFloat","toFixed","colors","StyleSheet","create","alignItems","paddingTop","width","height","color","fontSize","textAlign","letterSpacing","fontFamily","paddingBottom","PromptInputComponent","setPrompt","inferredPrompt","text","setText","useWindowDimensions","textInputStyle","_objectSpread","input","useEffect","TextInput","placeholder","multiline","onChangeText","maxLength","backgroundColor","borderColor","borderBottomLeftRadius","borderWidth","borderBottomRightRadius","borderStartWidth","borderEndWidth","borderRadius","paddingLeft","paddingRight","Breathing","animatedValues","useRef","Array","map","Animated","Value","current","animatedValue","index","animation1","timing","toValue","duration","useNativeDriver","animation2","fast","medium","slow","animationSequence","delay","sequence","animationSequences","loop","forEach","animation","start","animatedStyles","interpolate","inputRange","outputRange","extrapolate","interpolateAnimation","containerbreathing","heading","char","flex","flexDirection","justifyContent","marginHorizontal","fontWeight","position","data","label","DropDownComponent","passModelID","Dropdown","dropdown","selectedTextStyle","placeholderStyle","labelField","valueField","onChange","item","margin","borderBottomColor","borderBottomWidth","image","marginTop","rowContainer","overflow","columnContainer","selectButton","paddingHorizontal","elevation","promptText","lineHeight","sliderText","MyImagePicker","imageSource","setImageSource","styleSwitch","setStyleSwitch","settingSwitch","setSettingSwitch","Switch","trackColor","false","true","thumbColor","activeThumbColor","ios_backgroundColor","styleSwitchFunction","settingSwitchFunction","Image","source","require","Pressable","onPress","async","status","ImagePicker","requestMediaLibraryPermissionsAsync","alert","result","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","cancelled","assets","assetImage","App","useFonts","Sigmar","inferredImage","setInferredImage","useState","steps","guidance","modelID","setModelID","prompt","setInferredPrompt","parameters","setParameters","activity","setActivity","modelError","setModelError","returnedPrompt","setReturnedPrompt","textInference","setTextInference","ipScale","setIpScale","window","isImagePickerVisible","setImagePickerVisible","passModelIDWrapper","swapImage","console","log","scale","up","block_0","down","block_2","formData","FormData","append","JSON","stringify","uri","type","name","fetch","method","body","then","response","json","responseData","output","catch","error","alteredPrompt","randomIndex","Math","floor","random","seeds","length","headers","titlecontainer","BreathingComponent","ScrollView","scrollY","showsVerticalScrollIndicator","left","top","zIndex","changeButton","leftColumnContainer","dropdownRowContainer","ActivityIndicator","size","pressed","button","_Fragment","expandButton","expandImage","rightColumnContainer","imageStyle","pressable","StatusBar","right","bottom","padding","display","marginRight","marginLeft","columnButton","shadowColor","shadowOffset","shadowOpacity","shadowRadius","centeredView","activityIndicator","marginBottom","alignSelf","registerRootComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}